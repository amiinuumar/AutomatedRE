Problem,Class,Atributes,Relationship
"Consider a movie database in which data is recorded about the movie industry. The data requirements are summarized as follows: Movies are identified by their title and year of release. They have a length in minutes. They also have a studio that produces the movie and are classified under one or more genres (such as horror, action, drama etc). Movies are directed by one or more directors and have one or more actors acting in them. The movie also has a plot outline. Each movie also has zero or more quotable quotes which are spoken by a particular actor acting in the movie. Actors are identified by their names and date of birth and act in one or more movies. Each actor has a role in the movie. Directors are also identified by their names and date of birth and direct one or more movies. It is possible for a director to act in a movie (not necessarily in a movie they direct). Studios are identified by their names and have an address. They produce one or more movies. Design an Entity-Relationship diagram for the movie order database.","Movie, Studio, Genre, Director, Actor, Quote","Movie [Movie ID, Title, Year, Length, Outline], Studio [Name, Address], Genre [Name], Director [Name, DateOfBirth], Actor [Name, DateOfBirth], Quote [Text]","Movie and Studio, Movie and Genre, Movie and Director, Movie and Actor, Quote and Movie, Quote and Actor, Director and Actor, Studio and Movie"
"Restaurant management systems can include the following: Point-of-sale (POS) System: Used to input orders and record payments. The system captures all transactions, including charges, payments, voids, promo deals, and expenses. Payment Processing: This allows you to accept various payment options like credit or debit cards and mobile payments. Restaurant Inventory Management: Used to monitor current stock, the cost of the items, and more. The system shows the order details and table number when the cook prepares the order. The waiter in the service section serves the customer. The system shows the waiter's name and table number when the waiter serves. Employee Scheduling: Check employee attendance, shifts, and time off. The restaurant has more than one employee. Each employee has a name, age, and gender information. The restaurant has a name and more than one section. These sections are identified by section ID and their names, such as kitchen, service, and cash. Personnel works according to their sections. Personnel can be cooks, waiters, and cashiers. The cook stays in the kitchen and prepares the orders. The waiter in the service section serves the customer. The cashier prepares the check according to the order details in the system. Payroll and Accounting Service: Used to manage employee payroll and monitor the restaurant's cash flow.","Restaurant, Section, Employee, POS, Transaction, Order, Payment, Inventory, Scheduling, Accounting","Restaurant [name, sections], Section [ID, name], Employee [name, age, gender, role, section], POS [orderDetails, paymentDetails, transactionRecords], Transaction [type, amount, date], Order [orderDetails, tableNumber, waiterName, orderStatus], Payment [Type], Inventory [currentStock, itemCost, orderDetails], Scheduling [attendance, shifts, timeOff], Accounting [payroll, cashflow]","Restaurant and Sections, Sections and Employee, POS and Order, Transaction and POS, Payment and POS, Order and Cook, Accounting and Employee, Scheduling and Employee"
"The veterinary clinic wants to create a database to store information about all veterinary services performed. For each admitted animal, its ID, name, breed (if any) and owner must be stored. Each owner has an ID, name, address, and phone number. An animal might be owner-less. This happens frequently as the clinic often rescues abandoned dogs from the streets to treat them and get them new owners. It should be possible to store information about a specific breeds even if no animals of that breed have been treated at the clinic. Each appointment always has a responsible physician. All appointments start at a certain date and time; and are attended by an animal (and of course its owner). For each physician, an ID, his name, address, and phone number should be stored. In an appointment, several medical conditions might be detected. Each condition has a common_name and a scientific_name. No two conditions have the same scientific name. It should be possible to store information about the most common conditions for each different breed in the database.","Animal, Owner, Appointment, Physician, Condition, Breeds","Animal [ID, Name, Breed, Owner], Owner [ID, Name, Address, Phone], Appointment [Date, Time, Physician], Physician [ID, Name, Address, Phone], Condition [Common_Name, Scientific_Name], Breeds [Name]","Animal and Owner, Animal and Breeds, Appointment and Physician, Appointment and Animal, Appointment and Owner, Condition and Breeds"
"A company is comprised of two to eight departments. Each department has an ID and email. A department hires employees for certain projects. Employees working on projects can be temporary employees or permanent employees. Each employee is identified by a name, email, employee ID, employee number. Projects can be of types - production projects, research projects, education projects, and community projects. All projects have a title, description, budget amount, and deadline. In addition , each education project and community project are associated with one funding group. The funding group can be of types - private group, government group, or mixed group. The production projects are characterized by a site code.","Company, Department, Employee, Project, Funding, Production, Education, Community","Department [ID, Email], Employee [Name, Email, ID, Number], Project [Title, Description, Amount, Deadline], Funding [Type], Production [Site]","Company and Department, Department and Employee, Department and Project, Employee and Project, Project and Funding, Project and Production, Education and Funding, Community and Funding"
"Online Food Delivery System (OFDS) is used by many companies for delivering food at the doorstep. Each company has a name. In addition, companies hire employees for food delivery. These employees can be part-time employees or full-time employees. Each employee has a name and type. The system also allows the company to manage multiple vehicles. Each vehicle has a registration number and vehicle type which means a vehicle can be an owned vehicle or a rented vehicle. Employees drive these vehicles for food delivery.","Company, Employee, Vehicle","Company [Name], Employee [Name, Type], Vehicle [Number, Type]","Company and Employee, Company and Vehicle, Employee and Vehicle"
"An event is organized in a venue. An event can be a concert event or a theatrical event. A venue can be an open venue or a closed venue type. Each venue is comprised of multiple seats. These seats have different types of sections. A section can be of types - parquet center, balcony center, and others. Each seat has a number. The events are organized for different shows every 9 pm. Each show has a date.","Event, Venue, Seat, Section, Show","Event [Type], Venue [Type], Seat [Number], Section [Type], Show [Date]","Event and Venue, Venue and Seat, Section and Seat, Show and Event"
"To help the program chair, we are planning to develop a computer-assisted review system. The system will be available to users who can be authors, reviewers, and co-chairs. Each user has a name. Papers are known by the title and whether they are research papers or experience reports. The paper is reviewed by at least three reviewers. On the other side, the authors can submit as many papers as they want. When a reviewer logs in, she can consult the list of papers that have been assigned to her for review, and submit reviews for each of those papers.   Each review has feedback as well as grade that can be Accept or Reject. A final decision is made by the chair for each paper.","User, Paper, Review, Decision, Author, Reviewer","User [Name, Type], Paper [Title, Type], Review [Grade, Feedback], Decision [Final]","Author and Paper, Reviewer and Paper, Paper and Review, Reviewer and Review, Paper and Decision"
"Consider an online auction database system in which members (buyers and sellers) participate in the sale of items. The data requirements for this system are summarized as follows: The online site has members who are identified by a unique member ID and are described by an email address, their name, a password, their home address, and a telephone number. A member may be a buyer or a seller. A buyer has a shipping address recorded in the database. A seller has a bank account number and routing number recorded in the database. Items are placed by a seller for sale and are identified by a unique item number assigned by the system. Items are also described by an item title, an item description, a starting bid price, bidding increment, the start date of the auction, and the end date of the auction. Items are also categorised based on a fixed classification hierarchy (for example a modem may be classified as Computer/Hardware/Modem). Buyers make bids for items they are interested in. A bidding price and time of bid placement is recorded. The person at the end of the auction with the highest bid price is declared the winner and a transaction between the buyer and the seller may proceed soon after. Buyers and sellers may place feedback ratings on the purchase or sale of an item. The feedback contains a rating between 1 and 10 and a comment. Note that the ratings are placed on a completed transaction by the buyer or seller of the item in the transaction. Design an Entity-Relationship diagram for the auction database.","Member, Buyer, Seller, Item, Bid, Transaction, Feedback, Category","Member [ID, Email, Name, Password, Address, Telephone], Buyer [ShippingAddress], Seller [Account, Routing], Item [Number, Title, Description, StartingBid, Increment, StartDate, EndDate], Bid [Price, Time], Transaction [Date, FinalPrice], Feedback [Rating, Comment], Category [Name]","Buyer and Seller, Seller and Item, Item and Bid, Buyer and Bid, Bid and Transaction, Transaction and Feedback, Category and Item"
"Online Library System (OLS) provides easy access to customers to order different library items. A customer can place multiple orders. The status of an order can be pending or completed. Furthermore, each order is composed of multiple item lines. Each item line has a quantity. An item line is associated with a library item. The library item can be a book item or a digital item. Each library item has a status. The status can be available, hold, or loan. The book item can be of types - eBook format or print format. On the other side, the digital item can be an audio item or a video item. In addition, a digital item also has two options - downloadable and disc.","Customer, Order, Line, Item","Order [Status], Line [Quantity], Item [Status, Type]","Customer and Order, Item and Line, Order and Line"
"University admits many students every year. Each student has a name and ID. A student has a status which can either be a part-time student or a full-time student. After admission, students can attend up to five courses in a semester. The courses can be of type - research-based and project-based. University also allows students to drop the courses in the first two weeks. If a student drops the course within the first two weeks then no penalty is imposed by the university.","University, Student, Course","Student [Name, ID, Status], Course [Type]","University and Student, Student and Course"
"Online Rideshare System (ORS) allows users to manage road trips that are organized on a sharing basis. The users can be drivers or customers. Each user has a unique ID, email, and phone number. The system allows a driver to post trips. The trips can be direct trips or indirect trips (multiple stops). Each trip has a departure station, arrival station, number of seats, departure date, departure time, arrival time, and price. The customers can book seats until 2 hours before the departure time. The users can register for a membership package that includes rewards. These rewards can be in the form of cashback, discounts, or points.","User, Driver, Customer, Trip, Membership, Reward","User [ID, Email, Phone], Driver [Trips], Customer [Bookings], Trip [Departure, Arrival, Seats, Time, Price, Type], Membership [Package], Reward [Type] ","Driver and Trip, Customer and Trip, User and Membership, Membership and Reward"
"This system provides basic services to manage bank accounts at various banks. Banks can be of types - public and private. Also, each bank has a service category. The service category can be national or international. Each bank is composed of multiple branches. Each branch has multiple addresses such as temporary addresses and permanent addresses. In addition, a branch can be the main branch or an express branch. A user can be a customer or an employee. Each user has a name. A customer opens accounts at a branch. The customer can be a general customer or a VIP customer. Each account is uniquely identified by an account number across the bank. Furthermore, the account can be a checking account or savings account. It is possible to have a joint account (e.g. for a husband and wife). Each customer is assigned a particular employee as his or her 'personal banker'. An employee can be a teller, manager, or loan officer at a bank. Employees may work for multiple branches in a bank.","Bank, Branch, Address, User, Customer, Employee, Account","Bank [Type, Category], Branch [Type], Address [Address, Type], User [Name], Customer [Category], Employee [Position], Account [Number, Type]","Account and Customer, Employee and Customer, Bank and Branch, Account and Branch, Branch and Address, Employee and Branch"
"An automated library book borrowing system maintains a collection of books. Each book has title, barcode, ISBN, and number of pages. In addition, the system allows users to have either a member User or a guest User type. Each user has a name, email, address, and ID. A user can checkout a book on loan which has the start date and end date.","Book, User, Loan","Book [Title, Barcode, ISBN, Pages], User [Name, Email, Address, ID, Type], Loan [Start, End]","User and Book, User and Loan, Book and Loan"
"Online Art Gallery System allows artists to put their artwork on auction. Each artist has a name, phone number, ID, email, address and gender. To place artwork in an auction, each artist need a membership which can be of type - individual membership, agency membership, and agency affiliate memberships. Each membership has an ID, start date, end date, and reward points. An artist can have multiple artworks where each artwork has a title, description, category (painting, sculpture, and architecture), and price.","Artist, Membership, Artwork","Artist [Name, Phone, ID, Email, Address, Gender], Membership [Type, ID, Start, End, Points], Artwork [Title, Description, Category, Price]","Artist and Membership, Artist and Artwork, Membership and Artwork"
"A project management system assigns one or multiple projects to students. A student can be an undergraduate student or a graduate student. Each student has a name, email, student id and category. Furthermore, each project has a title, description, start date, deadline, and grade. These projects can be classified as research projects or course-based projects  type.","Student, Project","Student [Name, Email, ID, Category], Project [Title, Description, Start, Deadline, Grade, Type]",Student and Project
"A system used by map makers at the Government of Ootumlia contains information about various maps. Each map has a scale, and name. Each map also has information that defines the latitude and longitude of the top left corner of the map, and the height and width of the map in meters. A map includes several features where each feature has a name and feature type, which can be curve feature, point feature, or region feature.","Map, Feature","Map [Scale, Name, Information], Feature [Name, Type]",Map and Feature
"A small restaurant wants a new information system to store data for all meals consumed there and to keep a record of ingredients kept in stock. Each ingredient has a name, a measuring unit (e.g., olive oil is measured in litres, while eggs are unit based) and a quantity in stock. There are no two ingredients with the same name. Each dish is composed of several ingredients in a certain quantity. An ingredient can, of course, be used in different dishes. A dish has a unique name and an ID. There are several tables at the restaurant. Each table has an ID and a maximum capacity of people that can be seated there. In each meal, several dishes are consumed at a certain table. The same dish can be eaten more than once in the same meal. A meal takes place in a certain date and has a start and end time. Each meal has a responsible waiter. A waiter has an ID, a name, an address, and a phone number. In some cases, it is important to store information about the client that consumed the meal. A client has a tax identification number, a name, and an address.","Ingredient, Dish, Table, Meal, Waiter, Client","Ingredient [Name, Unit, Quantity], Dish [Name, ID], Table [ID, Capacity], Meal [Date, Start, End], Waiter [ID, Name, Address, Phone], Client [Tax, Name, Address]","Dish and Ingredient, Table and Meal, Meal and Dish, Waiter and Meal, Client and Meal"
"At the beginning of each semester, students may request a course catalogue containing a list of course offerings. Each student maintains a profile which comprises of student number, name, email, major, courses enrolled.  Information about each course, such as course code, course title, professor, department, and prerequisites, will be included to help students make informed decisions. The new online registration system will allow students to select four-course offerings for the coming semester. In addition, each student will indicate two choices in case a course offering becomes filled or cancelled. Each course offering will have at most ten students. No course offering will have fewer than three students. A course offering fewer than three students will be cancelled. Once the registration process is completed for a student, the registration system sends information to the billing system so the student can be billed for the semester. Professors must be able to access the online system to indicate which courses they will be teaching. They will also need to see which students signed up for their course offerings. For each semester, there is a period that students can change their schedules. Students must be able to access the online system during this time to add or drop courses. The billing system will credit all students for courses dropped during this period. At the end of the semester, the student can access the system to view an electronic report card. Since student grades are sensitive information, the system must employ extra security measures to prevent unauthorized access.","Student, Course, Professor, Offering, Semester, Billing, ReportCard","Student [Number, Name, Email, Major, Courses], Course [Code, Title, Professor, Department, Prerequisites], Professor [Department, Teaching], Offering [Course, Semester, Professor, Students, Capacity, Enrolment], Semester [StartDate, EndDate, Period], Billing [Amount, Status, Credits], ReportCard [StudentNumber, Semester, Grades, Comments]","Student and Offering, Student and Course, Course and Offering, Professor and Offering, Semester and Offering, Student and ReportCard, Student and Billing"
"Design the software to support a computerized banking network, including human cashiers and automatic teller machines ATMs to be shared by a consortium of banks. Each bank is identified by bank ID, name, address, and provides its computer to maintain its accounts and process transactions against them. Cashier stations are owned by individual banks and communicate directly with their own bank’s computer. Human cashiers enter account and transaction data. Automatic teller machines (ATM) communicate with a central computer which clears transactions with the appropriate banks. An automated teller machine accepts a cash card, interacts with the user, communicates with the central system to carry out the transaction, dispenses cash, and prints receipts. The system requires appropriate record-keeping and security provisions. The system must handle concurrent access to the same account correctly. The banks will provide their software for their computers; you are to design the software for the ATMs and the network. The cost of the shared system will be apportioned to the banks according to the number of customers with cash cards.","Bank, Computer, CashierStation, ATM, CentralComputer, Transaction, Account, User, Receipt","Bank [ID, Name, Address, Customers, Computers], CashierStation [Location, HumanCashier], ATM [BankID, CardReader, Receipts], CentralComputer [Transactions], Transaction [Type], Account [Type], Receipt [Transactions]","Bank and Computer, Bank and CashierStation, Bank and ATM, ATM and CentralComputer, Transaction and Account, ATM and Receipt, CashierStation and Transaction, CentralComputer and Bank"
"A furniture factory intends to implement an information system to store all data on the different types of furniture and components it produces: The factory produces several lines of furniture, each with a different name and consisting of several pieces of furniture of different types (beds, tables, chairs, etc.). All furniture pieces have a type, a single reference (e.g., CC6578) and a selling price. Each piece of furniture is composed of several components. The same component can be used more than once in the same piece. Every type of component produced is assigned a unique numerical code, a manufacturing price, and a type (screw, hinge, shelf, etc.). The furniture is then sold in various stores throughout the world. Each store has a different address and a fax number. To make the manufacturing process more efficient, stores must place orders every time they need to replenish their stock. These orders must also be stored in the database. Each order has an order number, a date, the store that placed the order as well as a list of all the ordered furniture and their quantities.","Factory, Lines, Piece, Component, Store, Order","Lines [Name], Piece [Reference, Type, Price], Component [Code, Price, Type], Store [Address, Fax], Order [Number, Date]","Factory and Lines, Lines and Piece, Piece and Component, Store and Order, Order and Piece"
"This an information system that provides basic information about customers and delivery services. Each customer has a VAT number, a name, a phone number, and an address. There are no two customers with the same VAT number. When a customer wants to send a package to another customer, he just has to login to the company website, select the customer he wants to send the package to, enter the package’s weight and type, if the delivery is normal or urgent. He then receives a unique identifier code that he writes on the package. The package is then delivered by the customer at the delivery centre of his choosing. A delivery centre has a unique name and an address. Each customer has an associated delivery centre. This delivery centre is chosen by the company, and it is normally the one closest to the customer’s house. The package is them routed through an internal system until it reaches the delivery centre of the recipient. The package is then delivered by hand from that delivery centre to the recipient by a courier. Couriers have a single VAT number, a name, and a phone number. Each courier works in a single delivery centre. A courier is assigned to a packet as soon as the packet is introduced in the system.","Customer, Package, Centre, Courier","Customer [VAT, Name, Phone, Address], Package [Weight, Type, Code], Centre [Name, Address], Courier [VAT, Name, Phone]","Customer and Package, Customer and Centre, Package and Centre, Package and Courier"
"Online factory information system has the following requirements. A factory has several machines. For each machine, has serial_number, make, model and purchase date. Each one of them is operated by several workers. A worker might work in more than one machine. Each worker has name, birthdate, address and a list of his skills. In this factory, products are of different type and weight. Each different type of product is produced in a single machine. But the same machine can produce more than one type of product. Products from the same type are all produced from the same single material and have the same weight. Clients can issue purchase orders. Each order has a list of the desired products and their quantity. Each client has a name, address, phone number and name of the contact person (if any). Each purchase order has order number, date it has been made, expected date and actual delivery date.","Factory, Machine, Worker, Product, Material, Client, Order","Machine [Serial_Number, Make, Model, Date], Worker [Name, BirthDate, Address, Skills], Product [Type, Weight], Material [Name], Client [Name, Address, Phone, Contact], Order [Number, Date, Expected, Actual]","Factory and Machine, Machine and Worker, Machine and Product, Product and Material, Client and Order"
"A bicycle renting company wants to create an information system that allows it to store the data regarding all their reservations and rentals with the following requirements: For each client, the following data should be recorded; national id number (NIN), tax identification number (TIN), name and address. The NIN and TIN must be different for every client and all clients should have at least a TIN and a name. The information about the bicycle models that can be rented- Each model has a unique name, a type and the number of gears. Each bicycle has an identification number and a model. There are several different stores where bicycles can be picked up and returned. Each store has a unique name and has an address. When a reservation is made, the pick-up day, bike model, and which store to pick-up the bike need to be specified. When a bike is picked up, the actual bike that was picked up must be stored in the database. When a bike is returned, the return date should be stored in the database.","Client, Model, Bicycle, Store, Reservation","Client [NIN, TIN, Name, Address], Model [Name, Type, Gears], Bicycle [Number, Model], Store [Name, Address], Reservation [Pick-up, Return]","Client and Reservation, Model and Bicycle, Store and Reservation, Bicycle and Reservation"
"The specification for a seminar management system is given as follows: A professor has a name, address, phone number, email address, and salary. Each student has a name, address, phone number, email address, and an average mark (of the final marks of his or her seminars). A seminar has a name, a number, fee and seminar type. When a student is enrolled in a seminar, the marks for this enrolment are recorded and the current average as well as the final mark (if there is one) can be obtained from the enrolment. From a student one can obtain a list of seminars he or she is enrolled in. Professors teach seminars. Each seminar has at least one and at most three teachers. There are two types of seminars: bachelor and master. From a bachelor seminar students can not withdraw. From a master seminar they can.","Professor, Student, Seminar","Professor [Name, Address, Phone, Email, Salary], Student [Name, Address, Phone, Email, Mark], Seminar [Name, Number, Fee, Type]","Student and Seminar, Seminar and Professor, Seminar and Student"
"The task at hand is to design and implement an efficient database system for a small online bookstore specializing in selling various genres of books, including fiction, non-fiction, and textbooks. The system should facilitate inventory management, order processing, customer interactions, and author information storage. Each book in the inventory must be uniquely identified by its International Standard Book Number (ISBN) and store details like title, author, genre, publication year, price, and quantity in stock. Books are published by a publisher, and each publisher has a name, contact information and a physical address. An Author should be assigned unique author ID and have their name, biography (optional), and contact information (e.g., email, phone number) stored in the system. For customer management, a customer should be assigned unique customer ID, and their information, including name, shipping address, billing address, email, and phone number, should be recorded. Orders, a central part of the system, each order require a unique order ID, order date and time, and status (e.g., In Progress, Shipped, Delivered). Furthermore, each order may comprise multiple books with associated quantities and subtotals. The system allows a customer to place order.","Book, Author, Publisher, Customer, Order","Book [ISBN, Title, Author, Genre, Year, Price, Quantity], Author [ID, Name, Biography, Contact], Publisher [Name, Contact, Address], Customer [ID, Name, Address, Billing, Email, Phone], Order [ID, Date, Time, Status]","Author and Book, Publisher and Book, Customer and Order, Book and Order"
"An online marketplace needs a good database system to effectively manage its extensive product inventory. Each product in the catalogue must be accurately recorded with a unique product ID, a comprehensive name, detailed description, price information, and current quantity in stock. The system also keeps comprehensive supplier details, including supplier ID, name, address, and contact information. Customers are essential entities within this system, each customer having their own user ID, name, address, and contact information. Customer can place an order, and the order has number, date and time. Additionally, the system must offer personalized product recommendations to customers based on their past purchase behaviours.","Product, Supplier, Customer, Order, Recommendation","Product [ID, Name, Description, Price, Quantity], Supplier [ID, Name, Address, Contact], Customer [ID, Name, Address, Contact], Order [Number, Date, Time]","Product and Supplier, Customer and Order, Customer and Recommendation"
"A cutting-edge hospital is seeking to implement an electronic health record system to maintain exhaustive patient records. The system should identify each patient with an ID and keep track biodata information, medical history, diagnoses, treatment plans, and appointments schedules. Physicians are another vital component, each physician characterized by their physician ID, name, and contact details. Appointment should contain detailed information including appointment ID, date, and time. Physician is responsible for an appointment, while a patient attends an appointment.","Patient, Physician, Appointment","Patient [ID, Biodata , History, Diagnoses, Treatment, Appointments], Physician [ID, Name, Contact], Appointment [ID, Date, Time]","Patient and Appointment, Physician and Appointment"
"A renowned airline desires a feature-rich flight booking system to optimize flight reservations and passenger management. For each flight, there should be flight number, departure and arrival times, and seat availability. Reservations should be associated with passenger and flight, each reservation identified by reservation ID and containing details like check-in and check-out dates, and passenger profile. Furthermore, passenger should have their own profiles with passenger ID, name, contact information, and order history. The system should empower passengers to search for available flights, book tickets, select preferred seats, and complete secure payments. The system should also facilitate reservation management and provide ticket modification capabilities.","Flight, Reservation, Passenger","Flight [Number, Departure, Arrival, Seat], Reservation [ID, Check-in, Check-out, profile], Passenger [ID, Name, Contact, Order]","Flight and Reservation, Passenger and Reservation"
"A thriving social media platform is keen on establishing a comprehensive database system to enhance user interactions, facilitate content sharing, and offer real-time updates. Each user should have detailed profile with user ID, username, and profile picture, and customizable settings. The core of the system revolves around post, each post with unique post ID, content, and timestamp. Each post is associated with a user. Posts should be open to interactions from other users in the form of comments and likes. Comment should be basically linked to post and user, featuring comment ID, content, and timestamp. Like should also be tied to a post and user to capture user preferences. Like should have an ID that uniquely identifies it.","User, Post, Comment, Like","User [ID, Username, Picture, Settings], Post [ID, Content, Timestamp], Comment [ID, Content, Timestamp], Like [ID]","User and Post, Post and Comment, User and Comment, User and Like, Post and Like"
"A prestigious weather research institute is in pursuit of a comprehensive weather data archive system to systematically collect, store, and analyse historical weather data. The system should accommodate various aspects, including Locations, Weather Data, Sensors, and Forecasts. Location should have location ID, coordinate, name, and detailed geographical descriptions. On the other hand, weather data should provide meticulous accounts of temperature, humidity, wind speed, precipitation, and timestamp. These records should be linked to specific locations and sensor readings, facilitating comprehensive historical weather analysis. Sensors are integral aspects, each sensor identified by sensor ID, name, type, and calibration details. The system should be designed to offer extensive capabilities for retrieving historical weather data, fostering research endeavours, and supporting forecasting initiatives. Each forecast is identified by an ID and have a forecast data and timestamp.","Location, Weather, Sensor, Forecast","Location [ID, Coordinate, Name, Descriptions], Weather [Temperature, Humidity, Wind, Precipitation, Timestamp], Sensor [ID, Name, Type, Calibration], Forecast [ID, Data, Timestamp]","Location and Weather, Sensor and Weather, Location and Sensor, Location and Forecast"
"A prominent car rental agency is in the market for an advanced car rental system to efficiently manage its vehicle fleet and streamline rental operations. The system should encompass various aspects, including Vehicles, Rental Transactions, Customers, and Maintenance Records. Each vehicle in the rental fleet should have a comprehensive profile featuring vehicle ID, make, model, rental rates, status of the vehicle, and a maintenance schedule. Rental transactions are at the heart of the system, each transaction marked by unique transaction ID, and rental duration. In every transaction, references are made to the customer that made the transaction and vehicle involved. Each customer have their own profiles enriched with customer ID, name, contact information, and detailed rental history. Moreover, it should integrate maintenance records which include maintenance ID, date, type of maintenance and description of maintenance.","Vehicle, Transaction, Customer, Maintenance","Vehicle [ID, Make, Model, Rates, Status, Schedule], Transaction [ID, Duration], Customer [ID, Name, Contact, History], Maintenance [ID, Date, Type, Description]","Vehicle and Transaction, Customer and Transaction, Vehicle and Maintenance"
"An extensive movie database is sought after to comprehensively catalogue movies, actors, directors, and user-generated reviews. The system should include the following requirements: Each movie should be recorded with movie ID, title, genre, release year, description, length, and rating. The movie database should also offer a rich catalogue of actor profiles, each featuring actor ID, name, birthdate, biography information, and filmography. Each director have a profile consisting of director ID, name, and filmography details. Users should have their own profiles, enriched with user ID, username, and comprehensive movie-related interactions, which include rating and reviews. They also have a studio that produces the movie. Each studio is identified by their name and have an address. They produce one or more movies. Movies are directed by one or more directors and have one or more actors acting in them. The system should offer users a versatile search functionality, allowing them to explore movies based on genre, release year, and actor. Users should be empowered to rate and review films, and the system should effectively aggregate these user-generated reviews to provide valuable insights to other users. The system should strive to be a comprehensive resource for movie enthusiasts, offering an extensive catalogue of cinematic content, actor profiles, and directorial works.","Movie, Actor, Director, User, Studio","Movie [ID, Title, Genre, Year, Description, Length, Rating], Actor [ID, Name, Birthdate, Biography, Filmography], Director [ID, Name, Filmography], User [ID, Username, Ratings, Reviews], Studio [Name, Address], Review [Text]","Movie and Actor, Movie and Director, Movie and Studio, User and Review, User and Studio, Movie and Review"
"An online auction platform desires a robust database system to facilitate auctions, bids, and user interactions. The system comprises the following requirements: Each auction should have a unique auction number, start time, and end time. Additionally, every auction has a reference to items being auctioned and detailed bidding rules. Bids are associated with user, auction, and item, capturing data related to the bid such as bid ID, bid amount, and timestamp. A user usually made bid offers. Each should have their own profile, featuring user ID, username, and comprehensive user profile, complete with bidding history. Item being auctioned should also be catalogued, with item ID, name, description, current bidding status and references to seller. A crucial system feature is the ability for users to place bids on items, with auctions featuring automated bid increments and well-defined closing rules. Seller should have a Seller ID, name and should streamlined experience listing items for auction, monitoring ongoing auctions, and managing their listings.","Auction, Bid, User, Item, Seller","Auction [Number, Start, End], Bid [ID, Amount, Timestamp], User [ID, Username, Profile, History], Item [ID, Name, Description, Status], Seller [ID, name]","Auction and Item, Auction and Seller, Bid and User, Bid and Auction, Bid and Item, User and Seller"
"Create a domain model in the form of a class diagram based on the following description. Model only things that are specifically described. Do not model “the system.” A company requires a payroll system. The company has three types of employees, namely, a manager, a commission worker, and an hourly worker. Information that needs to be stored for each employee is the employee’s name, surname, earnings and employee number. Additional information that must be stored for a manager is monthly fixed salary; for a commission worker flat remuneration, sales percent and the sales made for the month; for an hourly worker the number of hours worked and the wage per piece. All employees get a medical aid contribution. In addition to this manager get a pension as a fringe benefit. Each medical aid instance specifies the medical aid number, dependents, employee contribution and company contribution, while each pension instance specifies the pension number, beneficiaries, amount and date of retirement.","Employee, Manager, Commission Worker, HourlyWorker, Medical Aid, Pension","Employee [Name, Surname, Earnings, Number], Manager [Salary], CommissionWorker [Remuneration, Percent, Sales], HourlyWorker [Hours, Wage], MedicalAid [Number, Dependents, Contribution], Pension [Number, Beneficiaries, Amount, Retirement]","Employee and Manager, Employee and CommissionWorker, Employee and HourlyWorker, Manager and Pension, Employee and MedicalAid, Manager and MedicalAid, CommissionWorker and MedicalAid, HourlyWorker and MedicalAid"
"Draw a domain model in the form of a class diagram based on the following description. Model only things that are specifically described. Do not model “the system.” A system is needed for managing rental properties. Each rental property has a monthly rent price and square footage. Each rental is owned by a landlord with a name, a telephone number, and an address. There are two types of rentals: home and business. Home rentals have a number of bedrooms and a number of bathrooms. Business rentals have a number of offices and a maximum occupancy. A rental may adjoin a number of other rental properties (like apartments in the same complex). If a rental property is currently rented, it will have an associated lease with the name of the renter, the renter’s phone number, a start date, and an end date.","Property, Landlord, Home, Business, Lease","Property [Price, Footage], Landlord [Name, Telephone, Address], Home [Bedrooms, Bathrooms], Business [Offices, Occupancy], Lease [Renter, Phone, StartDate, EndDate]","Property and Landlord, Property and Home, Property and Business, Home and Business, Property and Lease"
"A real estate agency aims to implement a comprehensive real estate listing with the following requirements: Properties must be thoroughly catalogued, with property details encompassing property ID, type, location, description, and price. A property should have reference to the seller. Agent, the backbone of the real estate agency, should have profiles enriched with agent ID, name, contact information, and property listings. Users are central to the real estate process, and each user should possess a user profile featuring user ID, name, contact information, and inquiries regarding property listings. Listings are the core aspects within the system, each listing featuring listing ID, listing date, references to properties being listed, and references to the agent responsible for the listing. A crucial system feature is the ability for users to search for properties based on location and features, helping them find the ideal property. Users should also have the capability to schedule property viewings and submit inquiries directly to real estate agents. The system should facilitate property transactions, including offer submissions, negotiations, and closing processes. Transaction records should include transaction ID, transaction date, and audit trail of real estate transactions. Every transaction has references to the property and user involved in the transaction. The system should provide real-time updates on property availability, status changes, and transaction progress, ensuring a seamless and transparent real estate experience.","Property, Agent, User, Listing, Transaction","Property [ID, Type, Location, Description, Price], Agent [ID, Name, Contact, Listings], User [ID, Name, Contact, Inquiries], Listing [ID, Date], Transaction [ID, Date, audit]","Property and Listing, Agent and Listing, User and Property, User and Transaction, Agent and Transaction"
"An ambitious health and fitness tracker database is required to assist users in monitoring their health and tracking. The system should encompass various aspects, including Users, Health Metrics, Exercise Routines, Meal Plans, and Goals. Each User has an ID number, name, contact details, and personalized fitness goals. Health metrics should provide comprehensive data points such as weight, BMI, heartrate, and activity levels, time tracked. A health metrics is basically linked to user profiles. Exercise routines should offer detailed workout plans, exercise routines, and progress tracking capabilities. Meal plans are integral to the system, providing nutritional information, recipes, and meal logs for users to maintain a balanced diet. User should have the ability to set fitness goal, with the system tracking their progress over time. The system keep track of Recommendation with a unique recommendation ID, and other data which include activity data, meal data and recommendations. The system should offer data visualization tools, including charts and graphs, to help users understand their progress and trends. Goal achievement tracking should be seamless, with users receiving rewards or acknowledgments upon reaching their fitness milestones. Furthermore, the system should support community features, allowing users to share workouts, recipes, achievements, and progress with others, fostering a collaborative and motivating fitness community.","User, Metrics, Routines, Meal, Goal, Recommendation","User [ID, Name, Contact, Goals], Metrics [Weight, BMI, HeartRate, Activity, Time], Routines [Workout, Exercise, Progress], Meal [Nutritional, Recipes, Logs], Goal [Fitness, Progress], Recommendation [ID, Activity, Recommendations]","User and Metrics, User and Routines, User and Meal, User and Goal, User and Recommendation, Routines and Goal, Meal and Goal"
"An efficient customer support ticketing system is in demand to streamline customer inquiries, assign support agents, and track issue resolutions effectively. The system has the following requirements: Each customer should have a detailed profile, complete with VAT number, name, phone number, and address. Tickets are pivotal to the support process, each ticket has a unique ticket number, detailed issue description, and priority level. Each ticket has refernces to the customer and assigned agent. Support agents are essential entities, each agent is identified by agent ID and also has a name, contact detail, and ticket assignments. Products are integral to the support process, and each product should have detailed product ID, name, and category. The system should facilitate streamlined ticket creation processes, enabling customers to submit inquiries efficiently. Automated ticket routing based on product categories should ensure that inquiries reach the appropriate support agents. Priority levels should be assigned to tickets to ensure that critical issues receive prompt attention. Real-time ticket updates and notifications should keep customers informed about the status of their inquiries. Support agents should have tools for responding to tickets, tracking resolution progress, and closing tickets upon issue resolution. Additionally, the system should support knowledge base integration, providing customers with self-help options and frequently asked questions to assist with common inquiries. Advanced analytics should be offered to track customer support performance, including response times, issue resolutions, and customer satisfaction ratings.","Customer, Ticket, Agent, Product","Customer [VAT, Name, Phone, Address], Ticket [Number, Description, Priority], Agent [ID, Name, Contact, Assignments], Product [ID, Name, Category]","Customer and Ticket, Ticket and Agent, Ticket and Product"
"The following outlines the requirements for the usage and implementation of the Bewell app. The Bewell app is primarily designed for individuals who aim to lose or gain weight and require a structured medium to achieve their goals. The requirements are detailed as follows: The application will allow users to record exercises, including the number of repetitions and the diet followed. Each user is identified by a unique user ID, and also have name, weight goal, focus area (e.g., Abs, Legs), current weight, target weight, height, age, gender, and total calories burned. The app will feature a calendar layout where users can click on a specific day to find all the events, exercises, and diets scheduled for that day. Additionally, all activities, including exercises and running, will be monitored and recorded for the same date. The application can suggest videos and diet plans based on user inputs and schedule them on the calendar. Each exercise is recorded with a specific exercise number which uniquely identifies an exercise. In addition, exercise also have name, description, repetitions, target calories, focus area, and videos URL. A database of videos (which can include content from YouTube) will be created, and videos will be mapped based on user inputs, such as the body part the user wants to focus on. For low-data devices, thumbnails from the video at regular intervals will be mapped instead of full videos. Diet plans will be similarly mapped based on user preferences, with each diet having information recorded, diet ID, name, calories, type of meal, and diet plan. The application will also track the user's running activity, converting it into calories burned. Each running activity will be represented by the following activity number, date of the activity, distance covered, time, speed, calories burned, and route (tracked via GPS). The app will take the device's GPS location to track the user’s running route, working only when the user's internet and location services are enabled. This tracking helps in calculating the calories burned by considering the time taken and distance travelled by the user. Furthermore, the application will be able to work offline or in low-data mode. Given that network availability may be limited in some scenarios, the app is designed to function during offline periods or with reduced data usage. For low-data mode, pictures from the videos at regular intervals will be provided instead of streaming full videos, ensuring the information is conveyed with minimal data consumption. The app will store all data generated during offline mode and automatically upload it to the server when the device goes online.","User, Exercise, Diet, Activity, Video, Calendar","User [ID, Name, WeightGoal, Focus, Weight, TargetWeight, Height, Age, Gender, CaloriesBurned], Exercise [Number, Name, Description, Repetitions, TargetCalories, FocusArea, URL], Diet [ID, Name, Calories, Meal, Diet Plan], Activity [Number, Date, Distance, Time, Speed, Calories, Route], Video [URL, Thumbnails], Calendar [Date, Events, Exercises, Diets, Activities]","User and Exercise, User and Diet, User and Activity, User and Calendar, Exercise and Video, Calendar and Exercise, Calendar and Diet, Calendar and Running Activity"
"A bustling public library needs a modernized library management system to efficiently handle book cataloguing, checkouts, and patron interactions. The system should encompass the following requirements. Books should have comprehensive profiles featuring book ID, title, author, genre, publication year, ISBN, and availability status. A Patron should be registered with user ID, name, contact information, and borrowing history. Checkout should be recorded with checkout ID,and due date. Each checkout is associated with a patron and references to the borrowed book. Patrons should have the ability to reserve book that are currently checked out, with the system managing reservations and notifying patrons when reserved books become available. Librarians play a vital role in overseeing library operations, with librarian profiles featuring librarian ID, name, and responsibilities such as cataloguing new books and assisting patrons. The system should efficiently manage library resources, ensuring that patrons can easily locate and borrow books. Additionally, it should offer online catalogue search capabilities, automated overdue notifications, and a user-friendly interface for patrons to interact with the library's collection.","Book, Patron, Checkout, Librarian","Book [ID, Title, Author, Genre, Year, ISBN, Status], Patron [ID, Name, Contact, History], Checkout [ID, Due], Librarian [ID, Name, Responsibilities]","Patron and Checkout, Book and Checkout, Patron and Book, Librarian and Book, Librarian and Patron"
"An expanding e-commerce platform is on a quest to create a robust database system to support product listings, user accounts, transactions, and inventory management. Each product should be carefully recorded with product ID, name, description, price, and availability status. Users should have personalized user profiles enriched with user ID, username, contact information, and purchase history. Orders are central to the e-commerce experience, featuring order ID, and order date. Orders should have references to purchased products, and the user. Vendors, who supply product to the platform, should have vendor profiles with each vendor having a vendor ID, name, address, and product catalogue. Warehouses play a critical role in inventory management, with warehouse profiles featuring warehouse number, location, and inventory levels. The system should efficiently process orders, track product availability across multiple warehouses, and facilitate secure online payments. Additionally, it should provide users with personalized product recommendations, a seamless shopping cart experience, and real-time order tracking.","Product, User, Order, Vendor, Warehouse","Product [ID, Name, Description, Price, Status], User [ID, Username, Contact, History], Order [ID, Date], Vendor [ID, Name, Address, Catalogue], Warehouse [Number, Location, Inventory]","User and Order, Product and Order, Vendor and Product, Warehouse and Product"
"A dynamic event management company seeks a comprehensive database system to organize and track events, client details, vendor relationships, and financial transactions. The system should encompass various aspects, including Events, Clients, Vendors, Contracts, and Invoices. Each event is characterized with event ID, name, date, venue, and event description. Clients deserve personalized profiles featuring client ID, name, contact detail, and event history. Vendors are essential partners, with vendor profiles featuring vendor ID, service offered, address, and performance history. Contracts should detail agreements between client and vendor, with contract ID, terms, and services. A contract is associated with an event. Invoice should summarize financial transactions, with invoice ID, issue date, and payment tracking. The system should facilitate event planning, vendor selection, and client interaction, with features for managing budget, schedule, and event logistics. Additionally, it should provide financial reporting tools, including profit and loss statements, to ensure successful event management.","Event, Client, Vendor, Contract, Invoice","Event [ID, Name, Date, Venue, Description], Client [ID, Name, Contact, History], Vendor [ID, Services, Address, Performance], Contract [ID, Terms, Services], Invoice [ID, Date, Payment]","Event and Client, Event and Vendor, Client and Contract, Vendor and Contract, Contract and Invoice"
"A modern healthcare facility aims to implement an electronic health records (EHR) system to centralize patient records, medical histories, prescriptions, and appointments. The system should encompass the following specification: Patient should have comprehensive profile with patient ID, name, contact details, medical history, and insurance details. Medical record should document patient health information, with record ID, diagnoses, treatments, and treating medical staff. Prescription should detail medications, and dosages, with prescription ID, issue date. Prescription usually have patient reference. Appointment is pivotal, featuring appointment ID, and appointment date. A patient has an appointment and there is an attending medical staff for each appointment. The system should support secure access control, ensuring that authorized medical staff can access and update patient records. Additionally, it should offer automated appointment scheduling, prescription generation, and billing capabilities for efficient healthcare operations.","Patient, Record, Prescription, Appointment","Patient [ID, Name, Contact, History, Insurance], Record [ID, Diagnoses, Treatments, Staff], Prescription [Medications, Dosages, ID, Date, Patient], Appointment [ID, Date]","Patient and Record, Patient and Prescription, Patient and Appointment, Record and Prescription, Appointment and Record, Appointment and Prescription"
"A forward-thinking bank intends to create a robust online banking system to empower customers with account management, fund transfers, loan applications, and financial analytics. The system should encompass various aspects, including Accounts, Transactions, Loans, Customers, and Analytics. Account should feature account ID, account number, type, and account balance. Transactions are made on account. Each transaction should capture deposit and withdrawal activities, with transaction ID, and timestamp. Loans should document loan details, including loan ID, amount, interest rate, and repayment schedules. Customers deserve comprehensive profiles featuring customer ID, name, contact information, and account history. The system should support online fund transfers between accounts, loan application submissions, and bill payments. Additionally, it has analytics which provide customers with financial insights, transaction history, and budgeting tools to help them make informed financial decisions.","Account, Transaction, Loan, Customer, Analytics","Account [ID, Number, Type, Balance], Transaction [ID, Timestamp, Account], Loan [ID, Amount, Interest, Repayment], Customer [ID, Name, Contact, History], Analytics [Insights, History, Budgeting]","Customer and Account, Account and Transaction, Loan and Customer"
"A thriving retail chain seeks an advanced inventory management system to optimize stock levels, sales operations, and supply chain logistics. The system should encompass various aspects, comprising the following: Every product should be catalogued, with product ID, name, description, price, and stock levels. Each sale should record customer purchases, with sale ID, timestamp, and products sold. Suppliers play a crucial role in replenishing stock, with supplier profiles featuring supplier ID, name, contact detail, and product catalogues. Warehouse are pivotal hubs for inventory storage, with warehouse ID, location, and inventory level for various product. Another essential aspect of the system is shipment which is important for stock replenishment, with shipment ID, shipment date, quantity of product shipped and supplier reference. The system should support automated stock replenishment, inventory audit, and demand forecasting to ensure seamless retail operation. Additionally, it should feature reporting tools for sales analytics, inventory turnover, and supplier performance evaluation.","Product, Sale, Supplier, Warehouse, Shipment","Product [ID, Name, Description, Price, Stock], Sale [ID, Timestamp, Products], Supplier [ID, Name, Contact, Catalogues], Warehouse [ID, Location, Inventory], Shipment [ID, Date, Quantity]","Sale and Product, Supplier and Product, Warehouse and Product, Shipment and Supplier"
"An innovative travel agency aims to implement a comprehensive travel booking system to manage bookings, traveller profiles, destinations, and itineraries. The system should encompass various aspects, comprising the following: Booking should capture travel reservations, with booking number, travel date, and selected location. Travelers should have personalized profiles featuring traveller ID, name, contact details, and booking history. Travelers destination should be thoroughly recorded, with destination ID, name, description, and available travel package. Flight should detail flight options, including flight number, departure time, arrival time, and airline information. Hotel should provide accommodation options to travelers, with hotel ID, name, location, and room availability. The system should facilitate online booking, itinerary generation, and payment processing. Additionally, it should offer travellers detailed travel information, including flight details, hotel reservations, and destination highlights to enhance their travel experiences.","Booking, Traveler, Destination, Flight, Hotel","Booking [Number, Date, location], Traveler [ID, Name, Contact, History], Destination [ID, Name, Description, Package], Flight [Number, Departure, Arrival, Airline], Hotel [ID, Name, Location, Room]","Traveler and Booking, Booking and Destination, Booking and Flight, Booking and Hotel"
"A bustling restaurant chain needs a comprehensive inventory management system to track ingredients, menu items, kitchen operations, and supplier interactions. The system should encompass various aspects, comprising the following: Ingredient should be recorded with ingredient ID, name, measuring unit, and current stock level. Menu item should detail recipes, with item ID, name, description, and references to required ingredients. Kitchen operation is central to restaurant activities, with operation ID, timestamp, and references to menu items prepared. Suppliers are essential partners, with supplier profiles featuring supplier ID, name, contact details, and product catalogues. Order should capture ingredient orders from suppliers, with order ID, order date, and references to the ingredients ordered. The system should facilitate real-time kitchen inventory tracking, automated ingredient restocking, and cost analysis for menu items. Additionally, it should offer supplier performance evaluations, recipe costing, and waste reduction strategies for efficient restaurant operations.","Ingredient, Item, Operation, Supplier, Order","Ingredient [ID, Name, Unit, Stock], Item [ID, Name, Description, Ingredients], Operation [ID, Timestamp, Items], Supplier [ID, Name, Contact, Product], Order [ID, Date, Ingredients]","Item and Ingredient, Operation and Item, Supplier and Ingredient, Order and Ingredient"
"A dynamic job portal is on a quest to create an advanced database system to manage job listings, candidate profiles, employer interactions, and application tracking. The system should encompass various aspects, including Job Listings, Candidates, Employers, Applications, and Analytics. Job listings should feature job ID, title, description, company name, application deadline, and job category. Each candidate intending to apply for job should have comprehensive profile featuring candidate number, name, contact details, resume, and job application history. Employers deserve profiles enriched with employer ID, company information, contact details, and job posting. Applications should record candidate application, with application ID, timestamp, job listing and candidate reference. The system should support job searches, application submissions, and employer job postings. Additionally, it should offer analytics for job market trends, application success rates, and candidate matching to help job seekers and employers make informed decisions.","Job, Candidate, Employer, Application, Analytics","Job [ID, Title, Description, Company, Deadline, Category], Candidate [Number, Name, Contact, Resume, History], Employer [ID, Company, Contact, Posting], Application [ID, Timestamp, Listing], Analytics [Trends, Rates, Matching]","Candidate and Application, Employer and Job, Job and Application, Application and Candidate"
"A growing sales organization aims to implement a Customer Relationship Management (CRM) system to manage customer interactions and other sales related team activities. The system should encompass various aspects, including Customers, Leads, Opportunities, Sales Team, and Reporting. Customer should have detailed profile featuring customer ID, name, contact details, purchase history, and preferences. Lead represent potential customer, with lead ID, lead source, address, and lead status. Sales opportunities should detail potential sale deals, with opportunity ID, and values. Opportunity is associated customers and also refernces sales team. The sales team consists of sales representatives, each with a profile featuring team member ID, name, contact details, and sales performance metrics. The system should streamline lead management, opportunity tracking, and customer interactions to facilitate successful sales conversions. Additionally, Reporting provides sales analytics, sales forecasting, and conversion rates lead to support data-driven decision-making.","Customer, Lead, Opportunity, Team, Reporting","Customer [ID, Name, Contact, History, Preferences], Lead [ID, Source, Address, Status], Opportunity [ID, Values], Team [ID, Name, Contact, Performance], Reporting [Analytics, Forecasting, Rates]","Customer and Opportunity, Lead and Opportunity, Team and Opportunity"
"Store assistants should store the information for each car in the gallery, such as plate, model, daily price, etc. When customers want to rent a car, the system must show available car records in the gallery and be sorted according to their prices. The system lists the rented car records when the store assistant person enters the related button. The information includes rental code, car plate number, customer ID, rental start date, rental end date, and terms. Store assistant searches for available cars, submit renting a car, and produces rental reports, which comprises date, list of rented cars and rental summary. The store assistant updates the rental list when he rents a car or takes back a car. Profile of the store assistant are also captured in the system, which include employee ID, name, and designation. The main office sends overdue notices due to late arrivals. The store assistant records the customer's information, such as name, surname, address, plate number of the rented car, and leasing terms.","Car, Customer, Rental, Assistant, Office, Report","Car [Number, Model, Price, Availability], Customer [Name, Surname, Address, terms], Rental [Code, PlateNumber, CustomerID, StartDate, EndDate, Terms], Assistant [Name, EmployeeID, Designation], Report [Date, RentedCars, Summary]","Car and Rental, Customer and Rental, Assistant and Car, Assistant and Rental, Assistant and Customer, Office and Rental, Assistant and Report"
"Customers select at least one video for rental. The maximum number of tapes a customer can have outstanding on the rental is 20. The customer’s account number is entered to retrieve customer data and create an order. Each customer gets an ID card from ABC for identification purposes. This ID card has a bar code that can be read with the bar code reader. The card also contains customer additional information such as name, and address. Bar code IDs for each tape are entered, and video information from inventory is displayed. The video inventory file is updated. The information include title, genre, rental price, available copies. When all tape Ids are entered, the system computes the total bill. Money is collected, and the amount is entered into the system. Change is calculated and displayed. The rental transaction is created, printed, and stored. The customer signs the rental form, takes the tapes, and leaves. The video bar code ID is entered into the system to return a tape. The rental transaction is displayed, and the tape is marked with the return date. If past-due amounts are owed, they can be paid at this time; or the clerk can select an option that updates the rental with the return date and calculates past-due fees. Any outstanding video rentals are displayed with the amount due on each tape and the total amount due. Any past-due amount must be paid before new tapes can be rented.","Customer, Video, Transaction, Item, Clerk","Customer [Number, ID, Name, Address], Video [ID, Title, Genre, Price, Copies], Transaction [ID, Customer, Date, ReturnDate, Bill], Item [Transactions, DueDate, Past-Due]","Customer and Transaction, Transaction and Item, Video and Item, Transaction and Video, Customer and Item"
"A popular music streaming platform is looking to create a comprehensive system to manage music catalogues and other related information. The system should encompass various aspects, including and the requirements summarise as flows: Each song should be recorded with song ID, title, artist, genre, release year, and streaming availability. Playlist should represent curated music collections, with playlist ID, name, description, and song reference. User of the system maintained personalized profiles featuring user ID, username, and playlists created. Streaming data should capture user listening habit, by recording timestamp. A song can be streamed by a user. Artist deserve detailed profiles with artist ID, name, biography, and discography. The system should offer users seamless music discovery, playlist creation, and real-time streaming. Additionally, it should provide music recommendations, personalized playlists, and artist insights to enhance the music listening experience.","Song, Playlist, User, Streaming, Artist","Song [ID, Title, Artist, Genre, Year, Availability], Playlist [ID, Name, Description], User [ID, Username, Playlists], Streaming [Timestamps], Artist [ID, Name, Biography, Discography]","User and Playlist, Playlist and Song, User and Streaming, Song and Streaming, Artist and Song"
"A global corporation is seeking a comprehensive travel expense management system to track employee expenses, approvals, reimbursement requests, and expense reporting. The system should encompass various aspects, comprising the following: Each employee should have profile enriched with employee ID, name, contact information, and travel expense history. Expense report should detail incurred expenses, with report ID, expense category, and receipt. Employee subits an expense report for approval. Meanwhile, approval is necessary for expense reimbursement, with approval code, and approval status. Reimbursement should summarize approved expenses and reimbursement amount, with reimbursement ID, and processing date. The system should streamline expense reporting, approval workflows, and reimbursement processes, ensuring compliance with corporate policies and travel expense guidelines. Additionally, the system should offer expense analytics with budget tracking, and expense category analysis to optimize corporate spending.","Employee, Report, Approval, Reimbursement, Analytics","Employee [ID, Name, Contact, History], Report [ID, Expense Category, Receipts], Approval [Code, Status], Reimbursement [ID, Date], Analytics [Budget, Category]","Employee and Report, Report and Approval, Approval and Reimbursement"
"A modern hospital requires an advanced patient management system to handle patient admissions, medical records, prescriptions, appointments, and billing. The system should encompass various aspects, comprising the following: A Patient should have detailed profiles featuring patient ID, name, contact details, medical history, and insurance details. Medical record should document patient health information, with record ID, diagnoses, treatment, and medical staff reference. Prescription are issued to a patient which provides medications details, each prescription has prescription ID, and issue date. A patient usually has an appointment, which is an important aspect of the syste. Each appointment is recorded with appointment ID, appointment date, and medical staff reference. Billing should summarize healthcare charges, with invoice ID, issue date, amount, and patient reference. The system should support efficient patient admissions, secure medical record access, and appointment scheduling, while simplifying billing and insurance claims.","Patient, Record, Prescription, Appointment, Billing","Patient [ID, Name, Contact, History, Insurance], Record [ID, Diagnoses, Treatments, Staff], Prescription [Medications, ID, Date], Appointment [ID, Date, Staff], Billing [ID, Date, Amount]","Patient and Record, Patient and Prescription, Patient and Appointment, Record and Prescription, Appointment and Record"
"An e-learning platform is looking to create a comprehensive database system to manage its activities. courses, instructors, student enrolments, assignments, and assessments. The system should encompass the following requirements. Each Course should be thoroughly recorded with course code, title, description, and enrolment details. Courses are assigned to Instructors and each instructor is identified by instructor ID, name, email address, and contact information. Students enrolled for courses which allow them to attend coursework and submit assignments. Each student has a  user profile featuring student number, name, email address, and contact details. Assignment should detail course assignments, with assignment ID, due date, and submission records. An Assessment should include quizzes and exams, with assessment number, question details, students enrollments, and assessment score. The system should support course enrolments, assignment submissions, and grading, providing a seamless e-learning experience.","Course, Instructor, Student, Assignment, Assessment","Course [Code, Title, Description, Enrolment], Instructor [ID, Name, Email, Contact], Student [Number, Name, Email, Contact], Assignment [ID, Date, Submission], Assessment [Number, Question, Enrolments, Scores]","Course and Instructor, Course and Student, Assignment and Student, Assessment and Student"
"The purpose of this project is designing a hotel management system. A renowned hotel chain is looking to implement a comprehensive reservation and management system to streamline the hotel business and activities effectively. The system should encompass various aspects, including Room, Guest, Reservations, Housekeeping, and Billing. Each room should be categorized with room number, type, description, capacity, and rate. Guest deserves personalized profiles with guest ID, name, phone number, contact information, check-in, check-out, and room preferences. Reservation should detail guest bookings, with reservation code, check-in date, check-out date, and assigned room. Housekeeping records should track room cleaning schedules, with housekeeping ID, timestamp, room number, and cleaning status. Billing should summarize charges for room stays, additional services, and taxes, with invoice number, issue date, and number of days guest stayed. The system should offer online room bookings, room availability management, efficient check-in and check-out procedures, and real-time billing. Additionally, it should provide housekeeping management tools and guest feedback collection for enhanced guest experiences.","Room, Guest, Reservation, Housekeeping, Billing","Room [Number, Types, Descriptions, Capacity, Rates], Guest [ID, Name, Contact, Check-in, Check-out, Room], Reservation [Code, Check-in, Check-out, Guest, Room], Housekeeping [ID, Timestamps, Room, Cleaning], Billing [Number, Dates, Days]","Guest and Reservation, Reservation and Room, Housekeeping and Room, Billing and Guest"
"The objective of this project is to develop a comprehensive fleet management system for a transportation company to enhance operational efficiency and service reliability. This robust system will oversee vehicle maintenance, driver assignments, routes, fuel consumption, and cargo tracking. It will encompass various aspects, including information about Vehicles, Drivers, Routes, Fuel Logs, and Cargo. Each vehicle will be identified by a vehicle number, make, model, maintenance schedule, and GPS tracking. Vehicles will be assigned to drivers, who will have detailed profiles including driver ID, name, address, and driving history. Vehicles will also be assigned to specific routes, which will be planned and tracked, with each route identified by a route code and having a start point, end point, and scheduled time. Fuel logs will record fuel consumption with log ID, purchase date, and fuel data, keeping track of vehicle fuel-related records. Cargo will be tracked from origin to destination, with cargo ID, contents, weight, reference route, and delivery status. The system will support vehicle maintenance scheduling, driver assignments, route optimization, fuel efficiency analysis, and cargo tracking to ensure efficient and reliable transportation services.","Vehicle, Driver, Route, Log, Cargo","Vehicle [Number, Make, Model, Maintenance, GPS], Driver [ID, Name, Address, History, Vehicle], Route [Code, Start, End, Time], Log [ID, Date, Fuel], Cargo [ID, Contents, Weight, Status]","Driver and Vehicle, Route and Vehicle, Log and Vehicle, Cargo and Route"
"In today’s fast-paced world, effective personal finance management is crucial for achieving financial stability and meeting long-term objectives. To assist individuals in managing their finances efficiently, a personal finance management system is required. This system will help track income, expenses, budgets, investments, and financial goals. The system comprises the following requirements: Income should be recorded with income ID, source, amount, date, and reference account. Expenses should detail spending categories, with expense code, category, amount, date, and reference account. Budgets should be created to set spending limits for various expense categories, with budget ID, category, limit, and tracking of the actual amount spent. Investments should include details of investment portfolios, with investment ID, asset allocations, investment values, and historical performance. Goals should be defined, such as saving for a vacation or retirement, with goal ID, target amount, and progress tracking. The system should facilitate expense tracking, budget adherence, investment portfolio management, and goal tracking to help individuals achieve financial stability and meet their financial objectives.","Income, Expenses, Budget, Investments, Goals","Income [ID, Source, Amount, Date, Account], Expenses [Code, Category, Amount, Date, Account], Budget [ID, Category, Limit, Amount], Investments [ID, Asset, Values, Performance], Goals [ID, Amount, Tracking]","Income and Expenses, Budget and Goals"
"To enhance operational efficiency in the logistics industry, a comprehensive inventory optimization system is needed. This system will manage stock levels, forecast demand, process orders, handle supplier interactions, and track shipments effectively. The requirements are outline as follows: Each item in the inventory should be profiled with item ID, description, current stock level, and lead time. Items are supplied by a designated supplier. Demand forecast should predict future demand for inventory items, with forecast ID, forecasted quantity, and timeframe. Items has a demand forecast. Order should be processed based on demand forecasts, each order is identified by an order number, order date, and order quantity. Supplier should be managed with supplier profiles featuring supplier ID, telephone number, contact information, product catalogue, and lead time commitments. Shipments should record the movement of goods and they are made based on order references; thus, each shipment has shipment number, timestamp, and tracking information. The system should support automated demand forecasting, inventory replenishment, order tracking, and supplier performance evaluation to optimize supply chain operations.","Item, Forecast, Order, Supplier, Shipment","Item [ID, Description, Stock, Time, Supplier], Forecast [ID, Item, Quantity, Timeframe], Order [Number, Date, Item, Quantity], Supplier [ID, Telephone, Contact, Product, Commitments], Shipment [Number, Timestamp, Tracking]","Item and Supplier, Forecast and Item, Order and Item, Supplier and Order, Shipment and Order"
"In order to optimise project implementation and improve decision-making, a project management company aims to develop a comprehensive project management software system. This system will manage IT projects and related activities efficiently, providing robust tools for planning, task management, resource allocation, and progress tracking. The system requirements are comprehensively detailed in the following summary, which outlines the essential features and functionalities needed to meet the project’s objectives. Each project should be defined with project ID, name, description, start date, and deadline. Task should be created within project, with task ID, description, due date, and status. To accomplish a task, certain resources are allocated. Each resource is identified by resource ID, name, and address. Timeline should keep track of project progress, task dependencies, and resource allocation. Report should provide insights into project completion status, resource usage, and project profitability. The system should support project planning, task assignment, progress tracking, and resource management, facilitating efficient project execution and informed decision-making.","Project, Task, Resource, Timeline, Reports","Project [ID, Name, Description, Start, Deadline], Task [ID, Description, Date, Status], Resource [ID, Name, Address], Timeline [Progress, Dependencies, Allocation], Reports [Status, Usage, Profitability]","Project and Task, Task and Resource, Timeline and Project, Reports and Project"
"A charity organization requires a donation management system to record donations, issue donation receipts, track donor contributions, and analyse fundraising campaigns. The system should encompass various aspects, including donations, receipts, contributions, and campaign. Each donation should be recorded with donation number, timestamp, donor information, and donation amount. For every donation, receipt is issued. Receipt should be issued for tax purposes, with receipt ID, and timestamp. Each contribution should track donor contributions over time, with contribution ID, total amount, and donor references. Campaign analysis should evaluate fundraising campaign performance, donor demographics, and contribution trends. The system should support donation recording, receipt generation, contribution tracking, and campaign analysis for effective charity fundraising.","Donation, Receipt, Contribution, Campaign","Donation [Number, Timestamp, Information, Amount], Receipt [ID, Timestamp], Contribution [ID, Amount, Donor], Campaign [ID, Performance, Demographics, Trends]","Donation and Receipt, Campaign and Donation, Campaign and Contribution"
"To enhance agricultural productivity and management, an agricultural organization aims to develop a comprehensive database system. This system will facilitate the monitoring of crop growth, tracking of weather conditions, and analysis of agricultural data, thereby supporting more informed decision-making and efficient crop management. The system requirements specification is captured as follows: Each crop monitor should record monitor ID, crop condition, growth stages, pest observations, and references to fields. Weather data should collect weather forecasts, weather history patterns, weather ID, weather details, and references to locations. Data analysis should assess crop performance, forecast yield, and identify agricultural trends, with analysis numbers, results, and references to fields. The system should support crop monitoring, weather data retrieval, and data analysis to effectively manage agricultural crops.","Monitor, Weather, Analysis, Fields, Locations","Monitor [ID, Condition, Stages, Observations], Weather [Forecasts, Pattern, ID, Details], Analysis [Performance, Yield, Trends, Number, Results]","Monitor and Fields, Weather and Locations, Analysis and Fields"
"A file system contains information from multiple documents. The document can be added and removed from the file, and all the documents can be listed. Each document uses an editor suitable for creation. A document contains the document's name, creation date, author information, and size. The user determines the assignment of the editor to the documents. Each editor has a name and file management task. The system has three editors that allow you to manage documents: Text Editor, Image Editor, and Video Editor.","Document, Editor, File","Document [Name, Date, Author, Size, Editors], Editor [Name, File Management Task], File [Documents]","Document and Editor, File and Document, Editor and File"
"Turgutlu football team has more than one football player. A soccer player can be transferred to the football team. A football player can be sold to another football team. The system can perform the first eleven and spare team listing operations. Football players have team, name, age, and number information. Each football player has a different duty and plays football according to their position. Positions are forward, midfield, and defence. There are strikers in the forward, and they play to score goals. There is a goalkeeper in the defence, and he plays to clear the ball. There are midfielders in the midfield, distributing the ball around the pitch. On the system, when the striker scores goals, the system announces his number and name. When the goalkeeper saves the goal, the system announces his number and name.","Team, Player, Position, Striker, Midfielder, Goalkeeper","Team [Name, Players], Player [Name, Age, Number, Position, Team], Position [Name], Striker [Goals], Midfielder [Assists], Goalkeeper [Saves]","Team and Player, Player and Position, Player and Striker, Player and Midfielder, Player and Goalkeeper"
"A company requires an attendance tracking system to record employee clock-ins, manage work schedules, track leave requests, and generate attendance reports. The system requirements are summarised as follows: Each clock-in should record employee attendance, with clock-in ID, timestamp, and clock-in location. Each employee has a schedule with schedule number, date work hours and shifts. In references to schedule, leave requests should be submitted by employees, with request ID, time, and leave details. Reports should provide attendance summaries, with report number, arrivals, and leave history. The system should support employee attendance recording, schedule management, leave request processing, and attendance reporting for efficient workforce management. Employee should have a profile with employee number, name, email, phone, rank, and address.","Clock-in, Schedule, Requests, Reports, Employee","Clock-in [ID, Timestamp, Location], Schedule [Number, Date, Hours, Shifts], Requests [ID, Time, Details], Reports [Number, Arrivals, History], Employee [Number, Name, Email, Phone, Rank, Address]","Clock-in and Employee, Schedule and Employee, Requests and Employee, Requests and Schedule"
"To modernize its operations and enhance user experience, a fitness studio seeks to implement a comprehensive class booking system. This system will efficiently manage class schedules, handle user registrations, track attendance, and process payments, thereby improving overall class management and customer service. The system should encompass various aspects, including the following requirements: Each class schedule has schedule number, date, time, details of the instructor, and references to fitness classes. Registration should be stored with registration number, timestamp, and references to the users. Each attendance is Attendance should track user check-in at class sessions, with attendance ID, timestamp, and attendance status. Each attendance record is kept for specific registration. Payments should record class fees for each registration, with payment number, timestamp, and payment amount. The system should support class scheduling, registration management, attendance tracking, and payment processing for efficient fitness class operations.","Schedule, Classes, Registration, Users, Attendance, Payments","Schedule [Number, Date, Time, Instructor], Registration [Number, Timestamp], Attendances [ID, Timestamp, Status], Payments [Number, Timestamp, Amount]","Schedule and Classes, Registration and Users, Attendance and Registration, Payment and Registration"
"A conference organizer requires a registration system to manage attendee registrations, process event payments, issue event tickets, and track attendance. The system should encompass various aspects, including registration, payments, ticket, and attendance tracking. Each registration should allow attendees to sign up for the conference, with registration number, date, name, email, address, and event options. Payments should process registration fees, with payment ID, date, purpose, and payment amount. Ticket should be issued to registered attendee, with ticket number, and event details. Attendance tracking should monitor check-ins at conference sessions, with attendance ID, timestamps, and session details. The system should facilitate attendee registration, payment processing, ticket issuance, and attendance tracking for successful conference management.","Registration, Payments, Tickets, Tracking","Registration [Number, Date, Name, Email, Address, Options], Payments [ID, Date, Purpose, Amount], Tickets [Number, Details], Tracking [ID, Timestamps, Details]","Registration and Payments, Registration and Tickets, Registration and Tracking"
"To enhance the management and care of livestock, a livestock farm requires a robust information management system. This system aims to streamline the management of livestock records, track animal health, and schedule vaccinations. By integrating these functionalities, the system will improve operational efficiency, ensure timely veterinary care, and support overall animal welfare. The system should incorporate the following requirements: Livestock records should include animal ID, birthdate, breed, record number, and references to pens. Health tracking should document veterinary visits, symptoms, and treatment plans, with tracking codes, health data, and references to animals. The vaccination schedule should set reminders, record vaccination dates, and manage vaccination history, with schedule ID, schedule details, and references to animals. The system should facilitate comprehensive livestock record keeping, health tracking, and vaccination scheduling to support effective livestock management.","Records, Tracking, Schedule","Records [ID, Birthdate, Breed, Number, Pen], Tracking [Visits, Symptoms, Plans, Code, data], Schedule [Reminders, Dates, History, ID, Details]","Records and Pen, Tracking and Animals, Schedule and Animals"
"In an effort to increase the efficiency and management of parking facilities, a parking lot operator requires a sophisticated parking lot management system. This system will facilitate the monitoring of available parking spaces, manage vehicle entries and exits, and generate comprehensive parking reports, thereby improving operational efficiency and customer satisfaction. The system requirements are presented as follows: Parking space should have space ID, indicate availability status, timestamp, and space description. Each vehicle entry should log vehicles entering the parking lot, with entry ID, time, and entry details. While, vehicle exit should record vehicles leaving the parking lot, with exit ID, timestamp, and exit details. Report is an important aspect of the system, which should create parking report with report number, occupancy summary, and revenue statistics. The system should support parking space monitoring, vehicle entry and exit management, and parking report generation for efficient parking lot operations.","Space, Entry, Exit, Report","Space [ID, Status, Timestamp, Description], Entry [ID, Time, Details], Exit [ID, Timestamp, Details], Report [Number, Summary, Statistics]","Space and Entry, Space and Exit, Report and Space, Report and Entry, Report and Exit"
"To promote sustainable agriculture and enhance farm productivity, an agricultural cooperative requires a comprehensive database system. This system will efficiently manage crop data, monitor soil health, and track sustainable farming practices, ensuring effective resource use and supporting eco-friendly farming methods. Thus, the system should encompass various aspects, with the following requirements: Crop data should include crop ID, crop type, planting date, harvest yield, crop variety, and source. Soil health monitoring should analyse soil composition, nutrient levels, and irrigation schedules, along with field and soil health metrics. Sustainability practices should be tracked with a practice code, documenting eco-friendly farming methods, organic certification, pesticide usage, practice fields, and practice records. The system should facilitate crop data management, soil health monitoring, and sustainability practice tracking to support sustainable agricultural practices.","Crop, Monitoring, Practices","Crop [ID, Type, Date, Yield, Variety, Source], Monitoring [Composition, Nutrients, Irrigation, Field, Metrics], Practices [Code, Method, Certification, Pesticides, Field, Record]","Crop and Monitoring, Practices and Crop, Practices and Monitoring"
"A nonprofit organization requires a database system to manage donor information, fundraising campaigns, and impact assessment. The system requirements are described as follows: Each donor has a profile which should store donor number, name, email, phone, address, and donation history. Donors usually make donations towards a campaign. Each fundraising campaign should plan and track fundraising efforts, with campaign ID, date, and campaign results. For every campaign, the system should keep tract of impact metrics, which should measure the organization's social, environmental, and financial impact. Each impact metrics should be identified with impact ID, type, time, and impact data. The system should support donor profile management, fundraising campaign tracking, and impact assessment for nonprofit operations.","Donor, Campaign, Metrics","Donor [Number, Name, Email, Phone, Address, History], Campaign [ID, Date, Results], Metrics [ID, Type, Time, Data]","Donor and Campaign, Campaign and Metrics"
"An organisation that preserves historical archives needs an effective database management system in order to handle and preserve important historical records without compromise. This system will facilitate the cataloguing of historical documents, manage preservation activities, and support research access, thereby preserving historical records and enhancing scholarly research. The system should include various aspects, including document cataloguing, preservation records, and research requests. Each document catalogue should store details such as catalogue number, provenance, digital scan, document description, and references to the donor. Preservation records should include a preservation code, track preservation activities, conservation efforts, restoration projects, and preservation logs. Research requests should record request number, handle access requests, research inquiries, document loans, request descriptions, and references to the researcher. The system should support document cataloguing, preservation records management, and research request processing to maintain and utilize historical archives effectively.","Catalogue, Record, Requests","Catalogue [Number, Provenance, Scan, Description], Record [Code, Activity, Conservation, Projects, Logs], Requests [Number, Access, Inquiry, Loan, Description]","Catalogue and Record, Record and Requests, Requests and Researcher"
Employee are assigned to multiple projects. Each project has a project ID and title. Employee can be temporary employees or permanent employees.,"Employee, Project","Employee [Type], Project [ID, Title]",Employee and Project
"The TCS shall have the functionality to allow the operator to generate a UAV mission plan. The TCS shall have the functionality to receive and process UAV mission plans from service-specific mission planning systems. The TCS Mission plan shall include all necessary information required to be interoperable with the service-specific mission planning systems, including the Tactical Aircraft Mission Planning System (TAMPS), Aviation Mission Planning System (AMPS), and Air Force Mission Support System (AFMSS). The TCS shall have the functionality to transmit UAV mission plans to service-specific mission planning systems. The TCS shall facilitate the automated processing of mission plan data received via CI interfaces to extract the appropriate mission planning data. The TCS shall have the functionality to receive and process UAV mission plans from other TCSs. The TCS shall have the functionality to transmit UAV mission plans to other TCSs.  A Mission Plan shall include a Flight Route Plan for a selected AV, a Payload Plan for the selected payload, and a communications Plan. The TCS shall be capable of storing a minimum of mission plans under unique names to allow for later retrieval. The TCS mission planning function shall provide a graphical user interface (GUI) that allows the operator to define waypoints on a map-based display using a pointing device with full keyset redundancy. The TCS shall provide the capability to compute the range and bearing between two geographic positions on the map display. As an objective, the TCS shall be able to import, create, and modify map display overlays for fire support coordination, airspace control, and threat identification measures. Upon completion of radar cross-section analysis and characterization by the Government for each UAV type, TCS shall utilize a UAV signature versus threat lookup table (database) that identifies the lethality of the threat to the UAV and shall provide the capability of displaying aircraft signature versus threat, before and during flight. The TCS shall permit dynamic mission and payload retasking during all phases of operational mission execution. The TCS shall allow the operator to enter and review mission plan parameters, including AV flight parameters, payload control parameters, data link control parameters, AV VCR control parameters (if applicable to the selected AV), and AV loiter patterns. The TCS shall provide the capability to enter system configuration characteristics in the mission plan, including selected AV type, AV identification number, selected payload type, ground control authorization information, required communications pre-set for data links, tactical communications, and CI data dissemination. The TCS shall provide the system functionality necessary to upload a flight route plan and payload plan (if applicable) to the AV via the selected system data link and direct ground connection. TCS shall provide the capability for the operator to retrieve a mission plan for viewing, modification, and deletion at the operator's discretion and allow the operator to save the mission plan under a different name for future retrieval. The TCS shall automatically check the validity of the intended mission plan before being uploaded, including altitude constraints, payload constraints, data link range constraints, airspace restrictions, fuel limitations, threat constraints, data link terrain masking effects, and Loss of Link (LOL) Plan. The TCS shall notify the operator of all discrepancies found during the mission plan check and indicate successful completion of the mission plan check. The TCS shall provide the capability to override validation faults after the operator acknowledges the fault. The TCS shall allow the operator to set the LOL delay timer(s) during mission planning. The LOL delay is when the AV detects an unplanned LOL to the time it initiates LOL procedures. The TCS shall provide the capability to print waypoint data in alphanumeric format.","TCS, MissionPlan, FlightRoutePlan, PayloadPlan, CommunicationsPlan, ThreatLookupTable, Operator","TCS [name, storedMissionPlans, GUI], MissionPlan [flightRoutePlan, payloadPlan, communicationsPlan, name, validity, parameters], FlightRoutePlan [waypoints, altitudeConstraints, dataLinkRangeConstraints, airspaceRestrictions, fuelLimitations, threatConstraints, MaskingEffects], PayloadPlan [payloadType, controlParameters], CommunicationsPlan [dataLinks, tacticalCommunications, CIData, LOLPlan, LOLDelayTimer], ThreatLookupTable [UAVSignature, threatLevel, lethality], Operator [username, authorizationLevel]","TCS and MissionPlan, MissionPlan and TCS, TCS and FlightRoutePlan, TCS and CommunicationsPlan, TCS and ThreatLookupTable, Operator and GUI"
"The following sections describe the operational concepts of the FSW, including its functions, interfaces, performance characteristics, error detection, reporting and recovery mechanisms, and ground systems concepts. The FSW has the following primary functions: Process science data from the camera and relay it to the Spacecraft Control Unit (SCU) in the form of CCSDS Source Packets. Receive commands from the SCU that establish the current instrument state and camera mode. Transmit detailed housekeeping data to the SCU in the form of CCSDS Source Packets. Receive a time message from the SCU and synchronize the XCP local copy of the spacecraft clock. Control the heaters on the telescope tube and the thermal baffles. Read the TAM. The XRT supports three different but very similar observation sequences. The three observation types are: Automatic, Preplanned, Target of Opportunity. The sequence starts when a SISCATTITUDE message is received with the IS_SETTLED indication set to false. The message also indicates IS_IN_10_ARCMIN, which is true when the S/C is within ten arc minutes of the target position. When the distance remaining to slew is greater than ten arc minutes, the S/C begins the first of up to three activities that precede an observation. Each activity is initiated when the distance remaining is greater than ten arc minutes, and the previous activity is complete. The pre-observation activities are: Calculate row bias map, Calculate image bias map, Collect raw data image.","FSW, Camera, SCU, CCSDS, XCP, Heater, TAM, XRT, SISCATTITUDE, PreObservationActivity","FSW [primaryFunctions], Camera [scienceData, mode], SCU [commands, timeMessage, state], CCSDS [data], XCP [localClock], Heater [status, temperature], TAM [alignmentData], XRT [observationType], SISCATTITUDE [IS_SETTLED, IS_IN_10_ARCMIN, distanceRemaining], PreObservationActivity [activityName, status]","FSW and CCSDS, FSW and SCU, FSW and XCP, FSW and Heater, FSW and TAM, SISCATTITUDE and PreObservationActivity"
"A company with a name has two roles: Employee and Manager. The manager is a special employee. Each employee object contains information about the department, name, date of birth, and social insurance number. A company has more than one employee. These employees are included in the categories of workers, salespeople, and managers. In addition, while workers have information such as weekly working hours and hourly rates, the salespersons have information such as fixed salary, number of sales made, and commission percentage. The managers only get a fixed salary. Workers are separated as shift workers and non-shift workers. Off-shift workers have weekend and official holiday permits. Shift workers receive premiums for working on holidays. The company has production, control, and delivery departments. Each department has to be controlled by a manager. Shift workers can only work in the delivery department. In addition to the above basic information, the manager object also has position information. There is also Retirement Control which checks whether the retirement age is reached. The company stipulates that the retirement age of employees is 60 years old, and the retirement age of managers is 65 years old.","Company, Department, Employee, Manager, Worker, ShiftWorker, NonShiftWorker, Salesperson, Retirement","Company [name], Department [name], Employee [name, dateOfBirth, InsuranceNumber, department], Manager [position, fixedSalary], Worker [weeklyWorkingHours, hourlyRate], ShiftWorker [holidayPremium], NonShiftWorker [weekendPermits, HolidayPermits], Salesperson [fixedSalary, numberOfSales, commission], Retirement [retirementAge]","Company and Employee, Department and Manager, Worker and Department, Employee and Retirement, Manager and Employee, Worker and Employee, Salesperson and Employee"
"The library management system is software designed to manage all the functions of a library. There is a library officer who will manage the membership processes has an employee ID. A library issues loan items to members. Each member has a membership card that shows a unique member number and issue date. Along with the membership number, other details on a member must be kept, such as a name, address, and date of birth. A bar code uniquely identifies a loan item. There are two types of loan items, language tapes, and books. A language tape has a title language (e.g., French) and level (e.g., beginner). A book has a title, author(s), edition, and ISBN. An item can be borrowed, reserved, or renewed to extend a current loan. A member can reserve a loan item not available at the library. When a book or language tape is returned to the library, the member who made the reservation will be notified stating the reservation date. Reservations will be cancelled upon borrowing by the member or upon the member's request. The application will allow updating the list of loan items, member registration, lending transactions, and reservations with transaction date, due date and return date.","Library, Officer, Member, MembershipCard, LoanItem, Book, Tape, Reservation, Transaction","Officer [ID], Member [Number, name, address, dateOfBirth, Card], MembershipCard [cardNumber, issueDate], LoanItem [barCode, status], Book [title, author, edition, ISBN], Tape [title, language, level], Reservation [Date], Transaction [transactionDate, dueDate, returnDate]","Officer and Member, Library and LoanItem, Member and MembershipCard, LoanItem and Member, Reservation and LoanItem, Reservation and Member, Transaction and LoanItem, Reservation and Member"
"The goal of this project is to implement an Internet-based, who-done-it-style game called Galaxy Sleuth. The game is Internet-based in that players can play each other from remote sites on the Internet. The game is an intergalactic murder mystery, which emulates a board game scenario in which players spin a wheel to determine a randomly selected number of moves by which they travel through space to various planets. The game's objective is to gather clues while travelling about the universe. Each game has an ID, and number of players. Each player has a player ID, name, current position and receives information concerning the murder, and no players receive the same information. As the players travel through the universe, they are permitted to ask questions about what information their fellow players possess. The questions form a hypothesis for the murder circumstance and perpetrator, which the remaining players are invited to disprove with their evidence. The murder hypothesis is communicated to all players. If a player can disprove the hypothesis, that information is communicated only to the inquiring player. Other players are informed that the hypothesis was refuted but need to be shown the piece of evidence that refuted the hypothesis. If the hypothesis cannot be denied, all players are informed of that fact. After gathering a certain set of clues and applying deductive reasoning, players may deduce the perpetrator and circumstance of the murder. The first player to accomplish this wins the game. If a player draws an incorrect conclusion, they lose the game.  Moving and Landing on Planets: To visit a planet, a player must enter the planet's atmosphere at one of the predefined entry points. Each planet has between one and three predefined atmospheric entry points. These entry points are graphically depicted on the game as a diagonal line off a square on the board leading into a planet's atmosphere. A player visits a planet by making legal moves on the board until a cell adjacent to an atmosphere entry point is reached. Each cell had an ID that uniquely identifies it. It costs the player a single move to enter the atmosphere from the adjacent cell. The player is considered to be on the planet as soon as the planet's atmosphere has been entered. The player can enter the planet's atmosphere in a different number of moves. A player whose token resides on one of four planets having wormhole connections to other planets may choose not to spin the spinner and take the wormhole directly to the other planet. The planets, Linuta and Verlute, have a wormhole connecting each other, as do Earth and Evilon. A player may not re-visit the same planet on a single turn. A legal move consists of a player moving their token, the number of moves determined by the spinner, either horizontally or vertically, but not diagonally. The player may change directions multiple times but cannot enter the same cell twice during a single turn. Also, a player may not move into a cell occupied by another player's token. Winning the Game: A player wins the game by announcing their murder hypothesis, consisting of a planet, a perpetrator, and a murder weapon at any time during their turn, and having the server determine that the hypothesis is correct.  The solution is then broadcast to all players. If an announced hypothesis is incorrect, the player loses the game and cannot pose hypotheses any longer or make moves on the board but must continue refuting the hypotheses of other players. When the correct hypothesis is announced, all players are informed of the circumstances of the murder.","Game, Player, Board, Cell, Planet, Hypothesis, Clue, Spinner, Server","Game [ID, players, turn, board], Player [ID, name, position, information], Board [cells, planets], Cell [ID, position], Planet [name, points, connections], Hypothesis [planet, perpetrator, weapon], Clue [description]","Game and multiple Player, Player and Clue, Player and Board, Board and Cell, Cell and Player, Hypothesis and Player, Player and Server, Spinner and Player"
"There is a need for an application that will create an Academic Program to be used in the Software Engineering Department. The program will be identified by the program number and name. There are many courses in the Academic Program. A course has the course name, the course code, the start time, the end time, the days of the courses, the class, and the instructors. The classroom has class id, capacity, floor, and block information. The instructor has a name, surname, title, and specialty. Instructors lecture and mentor the students depending on their specialties. In addition, instructors can increase and decrease the course quota limit and change weekly course hours and course days. Also, they can add or drop courses from their list depending on attendance. Students have student number, name, major and enroll in the courses, drop the courses, receive transcripts, request documents, and conduct surveys.","Program, Course, Classroom, Instructor, Student, Time","Program [programName, programCode, courses], Course [courseName, courseCode, startTime, endTime, days, class, instructors, students, quota], Classroom [ID, capacity, floor, block], Instructor [name, surname, title, specialty, coursesTaught], Student [Number, name, major, courses], Time [hour, minute]","Program and Course, Course and Classroom, Instructor and Course, Instructor and Student, Student and Course, Instructor and Course"
"The processes we want to describe are recording the product on the shelf, the customer collecting products, and payment after choosing items. In this part, we have two types of customers: Normal and Extra-customer. Before purchasing products from different continents, the supermarket organizes them according to their type and group. Each product is recorded with features such as a unique Product ID, Name, Type (e.g., Alimentation, Pastry/Bakery, Butcher), Expiry Date, Price, and Storage Location (e.g., Shelf, Cold Chamber, Freezer). The supermarket uses a physical inventory system where every product purchased is recorded on a stock form. When the chief of the store wants to check the number of products in the store, they take all forms for each product and count the products to verify if the number written on the form matches the actual number of products stored. After purchasing a new product or receiving it from a supplier, those products are recorded in stock with the quantity. For selling, a product is placed on shelf based on the type and storage location requirements. Products like cheese and meat may be stored in the cold chamber or freezer before being placed on the shelf. The expiration dates of these products are checked. When customers enter the supermarket, they may see products in different groups. Each customer is identified by customer ID, name and type. Employees can help orient customers by showing where products are placed. After choosing and selecting products, customers use a basket for storing goods. They check the price, expiration date, and ingredients of the products before proceeding to the cashier. At checkout, products are scanned by the cashier using each product's Product ID and Quantity. Payment can be made either in cash, where the customer presents cash to the cashier, or by card, where the customer presents a bank card for payment. The cashier processes the payment and provides an invoice if needed. The delivery process begins when the customer first interacts with the service organisation and ends when the delivery is completed, and the customer exits the process. Each order is recorded with order ID, products, quantity and status. After receiving an order from the chief of order, the bakery and pastry agents prepare the goods and package them according to the product category. The chief of order then verifies the order against the proforma invoice to ensure accuracy. Controllers check the delivery for any discrepancies or theft. Each delivery information contains delivery ID, order and status of the delivery. After the delivery, the proforma invoice’s stump and original are transferred to the office of the general director.","Product, Stock, Customer, Basket, Cashier, Payment, Order, Delivery, Proforma, Chief, Controller, Director","Product [ID, Name, Type, ExpiryDate, Price, Location], Stock [Quantity], Customer [ID, Name, Type], Basket [Quantities], Payment [ID, Type, Amount, Invoice], Order [ID, Product, Quantities, Status], Delivery [ID, Order, Status]","Product and Stock, Customer and Basket, Basket and Product, Cashier and Payment, Payment and Customer, Order and Product, Delivery and Order, Proforma and Order, Controller and Order, Director and Proforma"
"The total price of the reservation depends on the time of year and the type of room. There are three types of rooms in the hotel. There are 100 odd numbered rooms which types are standard, and six even numbered rooms which are large-deluxe. The types of remaining rooms are Deluxe. Each room is identified by a room number, and has room type, price per night, maximum number of occupants, and status indicating whether the room is reserved or not. The price of standard rooms: $60 for the summer season, $40 for the spring season, and $25 for the autumn season per night per person. The room takes up to 4 people. The price is calculated according to the number of people entering the room. Rates for the deluxe room: $90 per person per night in the summer, $75 in the spring, and $ 50 in the autumn. The room takes up to 4 people. The price is calculated according to the number of people entering the room. While calculating the price for Large Deluxe rooms, the number of people is not considered. It is $400 daily in the summer, $300 in the spring, and $250 in the autumn. There can be a maximum of 7 people in this room. The customer must be registered for the first time to the system. The system keeps track of customer ID, name, and address. Customer must enter for pre-payment, 'H' for payment with a wire transfer, and 'S' for a standard reservation. A 15% discount will be applied on the price calculated when pre-paid reservation is selected. When payment using a wire transfer is selected, if the number of guests exceeds three persons, 50% of 1 guest's fee and 75% of 1 guest's fee will be deducted from the calculated amount. In standard reservations, customers make payments at the end of the accommodation. If all the rooms are reserved before, the user will be asked to make a choice again. If the user wishes to make another reservation transaction, the loop must start, and all transactions must be repeated. Details about the reservation are also recorded which include a reservation number, room number, number of guests, type of reservation, amount paid, and season.","Hotel, Room, Customer, Reservation","Hotel [TotalRooms], Room [Number, Type, Price, Occupants, status], Customer [ID, name, address], Reservation [Number, room, guests, type, amount, season]","Hotel and Room, Room and Reservation, Customer and Reservation"
"The user selects the movie show for which he would like to book tickets. This he does by clicking on the relevant film or the desired date. Depending on the selection, a list of movie shows for the selected film or movie shows of the chosen day is displayed. Then he clicks on the movie show for which he would like to order tickets. If there are any of the 30 orderable tickets left, he is prompted to enter his name, his e-mail address, phone number and the desired number of cards. He can also specify whether he wants to be reminded of the movie show by e-mail. After a click on the order, the system attempts to allocate the desired cards. If this is possible, a confirmation page is displayed on which all the provided information is summarized again. If the tickets for this movie show cannot be reserved, there will be an error message, and the user will be prompted to reduce the number of cards or select a different idea. Each movie has film title, genre, date, time, and available tickets.","User, Movie, Ticket, Order","User [Name, E-mail, Phone, Reminder], Movie [Title, Genre, Date, Time, status], Ticket [Status], Order [Tickets, Status]","User and Order, Order and Movie, Order and Ticket, Movie and Ticket, User and Ticket"
"The musical store receives tape requests from customers. The musical store receives new tapes from the Main office. The musical store sends overdue notices to customers. Each customer has a profile with the store which includes customer ID, name, address and rental history. The store assistant takes care of tape requests. The store assistant updates the rental list. Store management submits the price changes. Store management submits new tapes. Each tape in the store has tape number, title, rental price and availability status. Store administration produces rental reports. The main office sends overdue notices for tapes. The customer requested a videotape. The store assistant checks the availability of the requested tape. The store assistant searches for the available tape. The store assistant searches for the rental price of available tape. The store assistant checks the status of the tape to be returned by the customer. Customers can borrow if there is no delay with the return of other tapes. The store assistant records rentals by updating the rental list. The store assistant asks the customer for his address.","Customer, Tape, Assistant, Management, Office, Report","Customer [ID, Name, Address, History], Tape [Number, Title, Price, Status], Report [Data, Date]","Customer and Tape, Assistant and Tape, Assistant and Customer, Management and Tape, Management and Report, Office and Store, Assistant and Report"
"A flight reservation system is a commonly used system. Typically, a customer places an order for seats in a combination of connected flights from an origin to a destination airport. The customer and the system need to check flight connections' feasibility and schedule. The list of requirements for the reservation system is given below. Flight is defined by a number and a date and defines a route from an origin airport to a destination airport. A plane is assigned to a flight containing a set of numbered seats. Customers make reservations for specific seats on specific flights and have tickets. Each customer has an ID, title, name, and address. A route is followed by a flight from its origin airport to its destination airport. The information boards in the airports show short information about the flights, as FB073 flight departed at 08:45. A route includes one or more spans. A span is a part of a route from a start airport to a termination airport as part of a specific flight. The start (or termination) airport is called this span's origin (or destination) airport. For each flight, there are several connecting flights (different flights that leave from an intermediate stop close after their arrival). Stops are not indicated in the ticket unless the flight number changes, which indicates a plane change. An airline is any direct flight between two airports. All airlines are spans of some flights. A basic airline has no stops. A route is a set of connected basic airlines connecting all the airports through which it passes. For the convenience of customers, we may keep information on relevant facilities; for origins, we keep aspects such as parking; for destinations, we list hotels near the airport; for intermediate stops, we provide lists of hotels close to the airport, restaurants, etc. This information may also include details of the cities nearby.","Customer, Flight, Plane, Seat, Route, Span, Airline, Airport, Facility, Ticket, Board","Customer [ID, Title, Name, Address], Flight [Number, Date, Route, PlaneAssigned], Plane [Model, Seats], Seat [Number, Availability, Class], Route [Origin, Destination, Spans], Span [StartAirport, TerminationAirport, Number], Airline [Number, Origin, Destination], Airport [Name, Location], Facility [Type, Location], Ticket [ID, Customer, Flight, SeatNumber, Status], Board [Flights, Departure, Status]","Customer and Flight, Flight and Plane, Flight and Seat, Flight and Route, Route and Span, Span and Airline, Airport and Facility, Ticket and Customer, Board and Flight"
"This project aims to design new software that enables bank customers to open savings accounts. The project will include the savings account opening process on online banking systems such as mobile and web platforms. There will be two separate applications for the mobile platforms, which are Android and iOS. They should have the same function and features for the account creation process. The account opening process should be named ""Savings Account Opening,"" and it should be under the menu ""Accounts."" On the Accounts menu, the ""Savings Account Opening"" tab should be added to the end of the page. Customer types can be either retail or corporate. The very first savings account of any customer must be in EUR currency. After that, the user has the option of 3 other currencies: USD, GBP, and TRY. The maximum number of savings accounts is limited to 10. Customers can have only one account per currency, except EUR. Customers can have more than one account in EUR currency. The customer should invest at least 2000 EUR or an equivalent amount when opening a savings account. The system should only accept numerical inputs. If the customer enters non-numeric characters (such as letters or special characters) system should not allow the information. After the customer completes the account creation, the system should take two different actions. Firstly, the system should display a message if the account creation is successful. The system should not perform the account opening if there is any error. The system should display an error message. Secondly, if account creation is successful, the system should send an e-mail to the customer's registered e-mail address, informing the account is opened and ready to use. On the e-mail, content should contain the customer’s name, surname, created account number, amount of the transaction, and currency of the account. While communicating the banking systems, the money transfer process and account creation should be fully encrypted. Data integration (in terms of money amount, account numbering, etc.) must be guaranteed. The system should detect any proxy coming into the way and protect the customer from the man in the middle attacks.","Customer, Account, Transaction, Currency, Platform, Security","Customer [Name, Surname, Email, Type, AccountNumber, Amount, Currency Accounts], Savings Account [Number, Currency, Balance, Date], Transaction [Number, Amount, Currency, Date, Status], Currency [Code], Platform [Type]","Customer and Account, Account and Transaction, Currency and Account, Platform and Account, Security and Platform, Customer and Security"
"This study aims to design new software that allows bank customers to apply for IPOs. (Initial Public Offering). Finishing this project will enable purchasing company shares via online banking applications. The study will include the IPO Application process on online banking systems such as mobile and web platforms. There will be two separate applications for the mobile platforms, which are Android and iOS. They should have the same function and features for the account creation process. The IPO application process should be named ""Apply for IPO,"" and it should be under the menu ""Investments."" On the Investments menu, the ""IPO Application"" tab should be added to the end of the page. Only ""retail"" types of customers can apply for IPO. Retail customers should be eligible for applying IPO. If the user has unpaid credit card payments, a blocked account, or is marked as a ""fraud user,"" the user should not be able to perform an IPO application. Customers who will make IPO Applications must share their name, surname, email address, and telephone number information with the related company. The user interface should include an information pop-up that says this information (name, surname, email address, telephone) will be shared and can be used by the company. When a user applies IPO, he is required to upload legal allowance documentation. Documentation could either be in the "".docx"" or "".pdf"" format. Any other formats are restricted. A validation error should be displayed if a user tries to upload another type of document. When the user completes the application process successfully, the bank should send two information emails, one for the customer and another for the company. If the user has more than five failed attempts, the bank should restrict the user from the application process. The user should not be able to attempt the 6th IPO application. If they would like to apply anyway, they should call the ""call centre"" and request IPO application access. Even though the user completed the process successfully, the purchase is still being determined. Related companies always have a right to reject users' applications. If a company rejects the user, our system should inform the customer. Email should be user-friendly and ""In HTML"" format for future compatibility. Email content should include below information: User's name, surname, email address, telephone number, applied company named, number of shares that have been purchased, and the amount of money that has been paid.","Customer, Application, Company, Platform, Documentation, Security","Customer [Name, Surname, Email, Telephone, Type, Eligibility], Company [Name, Email, Terms], Platform [Type]","Customer and Application, Application and Company, Customer and Documentation, Security and Customer, Application and Documentation, Company and Customer, Security and Platform"
"This study aims to design new software that allows bank customers to set PIN codes for their cards. By finishing this project, customers can set their PIN code without needing to go to a kiosk or a branch. Bearing in mind that each customer has a profile that comprises customer ID, name, email, and registered cards. The study will include the ""Set PIN"" process on mobile systems. There will be two separate applications for the mobile platforms, which are Android and iOS. They should have the same function and features for the account creation process. The project will also contain the back-end communication system for the kiosk and branches. The ""Set PIN"" process should be under the ""Cards"" menu. It should be added after the ""My Cards"" page. Each user can have four different types of cards. Card types are debit, credit, virtual and supplementary. Before using any card, the user should set a ""PIN"" using online banking systems. When setting a PIN, the user should enter their card number and CVV information. Both card number and CVV information should be an integer. The system should not accept any other type of input. If the user enters any other type and continues, the system should display an error message, and the process should not continue. If the user enters the wrong card number for the third time, the system should display a pop-up saying that the user entered the wrong card number for the third time and will be logged out. After the message displays, the system should cancel the ""PIN setting"" process, and the user should be logged out of the application. The system should have a parameter on the database that stores whether the user has a pin. After the user enters the card number and the CVV information, the system should perform the check. If the user already has a PIN, the system should display a pop-up saying that the user already has the PIN code. If the user has no PIN code, the system should display the ""Set PIN"" flow, the first step. When a user completes the ""Set PIN"" process, the database's related parameter value should be true. After the user sets the PIN, if desired, the user should be able to reset and change the PIN. After the user successfully sets their PIN code, they should be able to use it immediately on the kiosk or any transaction requiring a pin. PIN code should never be stored anywhere on the application. It should be directly sent to banking systems via an encrypted tunnel.","Customer, Card, Setup, Platform, Security, Database","Customer [ID, Name, Email, Cards], Card [Number, CVV, Type], Platform [Type]","Customer and Card, Card and Setup, Customer and Setup, Platform and Setup, Security and Setup, Setup and Database, Database and Security"
"The bank can send information to its customer through email or SMS through online systems. This study aims to design new software that allows bank customers to set their communication preferences for future needs. By finishing this project, customers can select their communication preferences without going to a kiosk or a branch. A customer has a profile on the system that includes their customer ID, name, surname, email address, phone number, and address. The system should be compatible with two separate mobile platforms, which are Android and iOS. They should have the same function and features for the account creation process. The “Set Preferences” process should be under the “Accounts” menu. It should be added at the bottom of the page. Users should be able to choose if they want to get information via email or SMS. When a user enters the banking system user should see a menu that allows the user to select communication preferences. The screen should display an information message for the user stating that if the user changes the preferences, it will be applied to all the transaction flows and other contact-required processes. If the user has not any email address registered to the banking system, the email option should see as “disabled,” and by default, the SMS option is selected. Since SMS is the only option, the user should not be able to continue the process. If the user has both information (email and telephone number), the user can proceed with the flow. When the user selects email and completes the process, from that point, the bank should only send emails for sending information to the customer. Also, if the user selects the SMS option and completes the process, the bank should communicate with the user only via SMS. After the process, the banking system should store this preference in the database.","Customer, Preference, Platform, System Security, Database","Customer [ID, Name, Surname, Email, Phone, Address], Preference [Type, Status], Platform [Type, Version, Functionality]","Customer and Preference, Preference and Platform, Customer and Platform, Preference and Database, Security and Preference, Database and Security"
"We want to model a system for management of flights and pilots. An airline operates flights. Each airline has an ID and a name. Each flight has an ID, a departure airport and an arrival airport: an airport as a unique identifier, a name and location. Each flight has a pilot and a co-pilot, and it uses an aircraft of a certain type; a flight has also a departure time and an arrival time. An airline owns a set of aircrafts of different types. An aircraft can be in a working state, or it can be under repair. In a particular moment an aircraft can be landed or airborne. A company has a set of pilots: each pilot has an ID, name and experience level: 1 is minimum, 3 is maximum. A type of aeroplane may need a particular number of pilots, with a different role (e.g.: captain, co-pilot, navigator): there must be at least one captain and one co-pilot, and a captain must have a level 3.","Airline, Flight, Airport, Aircraft, Pilot","Airline [ID, Name], Flight [ID, Departure, Arrival, pilot, co-pilot], Airport [ID, Name, Location], Aircraft [Type, Status, State], Pilot [ID, Name, Level]","Airline and Flight, Flight and Airport, Flight and Aircraft, Flight and Pilot, Pilot and Aircraft"
"The university has decided to develop its own WatCard system for students, rather than rely on software from a vendor. The initial release of the software allows a WatCard holder to use the card to gain access to secure areas on campus (e.g., their residence after hours, computer rooms). Each student has a profile with student number, name, email, telephone number, major, and card validity. Students who hold the card can also use the card as a debit card, meaning that they can deposit money into an associated account, and can purchase items in certain locations by using the card to withdraw money from the account. In the beginning, students will only be able to use their WatCards to pay various university-related fees: parking fees (at parking permit dispensers), library fees, equipment rental fees at the Physical Activity Centre, fees for official transcripts, etc. Also, in the beginning, only online deposits will be supported. The system keeps a Usage record of every use of the WatCard.","Student, WatCard, Account, Transaction, Location","Student [Number, Name, Email, Telephone, Major], WatCard [Validity], Account [Number, Balance], Transaction [Type, Amount, Date, Time], Location [Type]","Student and WatCard, WatCard and Account, Account and Transaction, Transaction and Location"
"In a university there are different classrooms, offices and departments. A department has a name, and it contains many offices. A person working at the university has a unique ID and can be a professor or an employee with designation. A professor can be a full, associate or assistant professor and he/she is enrolled in one department. Each office has an office number and number of occupants. Every employee works in an office. A classroom has a number ID, capacity, number of seats and contains a number of facilities.","Department, Office, Person, Professor, Employee, Classroom, Facility","Department [name], Office [number, occupants], Person [ID], Professor [rank, department], Employee [Designation], Classroom [ID, capacity, seats], Facility [type]","Department and Office, Professor and Department, Employee and Office, Classroom and Facility"
"Design a system for a movie-shop, in order to handle ordering of movies and browsing of the catalogue of the store, and user subscriptions with rechargeable cards. Only subscribers are allowed hiring movies with their own card. Each subscriber has a unique subscriber ID, name, email, contact address, and loyalty points. Credit is updated on the card during rent operations. Users who do not subscribe also have their profile recorded on the system, which include user ID, username, email, and phone number. Both users and subscribers can buy a movie and their data are saved in the related order. When a movie is not available it is ordered.","Subscriber, User, Card, Movie, Order, Catalogue","Subscriber [ID, Name, Email, Address, Points, Card], User [Username, Email, Phone], Card [Balance], Movie [movie ID, title, availability status], Order [order ID, movie ID, user ID, date], Catalogue [Movies]","Subscriber and Card, Subscriber and Movie, User and Movie, Order and Movie, Catalogue and Movie"
"Consider a database system for a baseball organisation such as the major leagues. The data requirements are summarised as follows: The personnel involved in the league include players, coaches, managers, and umpires. Each is identified by a unique personnel ID. They are also described by their first and last names along with the date and their nationality. Players are further described by other attributes such as their batting orientation (left, right, or switch) and have a lifetime batting average (BA). Within the players' group is a subset of players called pitchers. Pitchers have a lifetime ERA (earned run average) associated with them. Teams are uniquely identified by their names. Teams are also described by the city in which they are located and the division and league in which they play (such as the Central division of the American League). Teams have one manager, a number of coaches, and a number of players. Games are played between two teams with one designated as the home team and the other the visiting team on a particular date. The score (runs, hits, and errors) is recorded for each team. The team with more number of runs is declared the winner of the game. With each finished game, a winning pitcher and a losing pitcher are recorded. In case there is a save awarded, the save pitcher is also recorded. With each finished game, the number of hits (singles, doubles, triples, and home runs) obtained by each player is also recorded. Design an Entity-Relationship diagram for the baseball database.","Personnel, Player, Pitcher, Coach, Manager, Umpire, Team, Game, Performance","Personnel [ID, Firstname, Lastname, DateOfBirth, Nationality], Player [Orientation, BA], Pitcher [ERA], Team [Name, City, Division, League], Game [Date, Home, Visiting, Score, Winning, Losing, Save], Performance [Singles, Doubles, Triples]","Personnel and Player, Player and Pitcher, Team and Manager, Team and Coach, Team and Player, Game and Team, Game and Pitcher, Game and Performance"
"A bank system contains data on customers identified by name and address and their accounts. Each account has a number and a balance and there are two types of accounts: one for savings which offers an interest rate, the other for investments, used to buy stocks. Stocks are bought at a certain quantity for a certain price (ticker) and the bank applies commission on stock orders.","Customer, Account, Savings, Investments, Stock, Stock Order, Commission","Customer [Name, Address], Account [Number, Balance], Savings [Rate], Stock [Ticker], Order [Quantity, Price], Commission [Amount]","Customer and Account, Account and Savings, Account and Investments, Investments and Order, Order and Stock, Order and Commission"
"InternetFlix wants to build a web-based DVD rental business whereby customers interact with the company via the Internet. Customers use a web interface to browse the DVD inventory, ask about the availability of movies, and request to borrow movies (up to 2 movies at a time). Each customer is identified by a unique customer ID and also has a name, email, phone number, movie preferences, and account number. The company is comprised of several branches, and each branch has a branch ID, name, address, telephone number, and detailed portfolio. Each branch has employees who work there, and their records include an employee ID, name, email, and designation. The company mails requested DVDs out to the customer, and the customer mails the DVDs back when he is done with them. The rental period is two weeks. There is a fee for renting a movie (movies have different rental fees based on whether they are new releases, whether the movie has won any special awards, etc.). Each movie has an ID, title, genre, synopsis, and rental fee. There is a late fee (assessed daily) for not returning a movie before the end of the rental period. When an account's balance falls below the value MinBal, the account is suspended, and the customer cannot initiate new loans until payment is made and the balance becomes non-negative. Information about both current and past loans is maintained.","Customer, Movie, Rental, Account, Branch, Employee, Loan","Customer [ID, Name, Email, Phone, Preferences, AccountNumber], Branch [ID, Name, Address, Telephone, Portfolio], Movie [ID, Title, Genre, Synopsis, Fee], Rental [Date, ReturnDate, FeeCharged, LateFee], Account [Balance, MinBal, Status], Branch [BranchID, Address, Telephone], Employee [ID, Name, Email, Designation], Loan [LoanDate, ReturnDate]","Customer and Account, Customer and Rental, Rental and Movie, Rental and Loan, Branch and Employee, Branch and Customer, Account and Customer, Rental and Account"
"A token-ring-based local area network (LAN) is a network consisting of nodes, where network packets are sent around the ring. Each node has a unique name and address within the network and refers to its next node. Different types of nodes exist: workstations are the originators of messages, while servers and printers are network nodes that can receive messages. Packets contain an originator, a destination, and content, and are circulated around the network. A LAN in this configuration forms a circular arrangement of nodes.","Node, Workstation, Server, Printer, Packet","Node [Name, Address, NextNode], Packet [Originator, Destination, Content]","Node and Packet, Workstation and Packet, Server and Packet, Printer and Packet, Node and Node"
"In today's highly competitive agricultural market, effective data management is crucial for crop trading companies. The ability to analyse crop prices, monitor market trends, and efficiently manage inventories is key to maintaining a competitive edge. To achieve these goals, a robust and comprehensive database system is essential. This document outlines the requirements and structure for a database system designed specifically for crop trading companies. The system should encompass various aspects, including Crop Pricing Data, Market Trends Analysis, and Inventory Management. Each crop is recorded with a unique crop ID, name, type (e.g. grain, tuber, etc.), variety, classification (organic or inorganic). Crop pricing data should collect crop price information, update price records, and calculate price averages, with price code, and timestamps. Market trends analysis should monitor market conditions, predict price fluctuations, and generate market reports, with analysis ID, timestamp, references to crops, and analysis data. Inventory management should maintain crop inventories, track crop shipments, and record inventory adjustments, with timestamp, references to crops, and management data. The system should support crop pricing analysis, market trend tracking, and inventory management for crop trading companies.","Crop, Price, MarketTrend, Inventory, Shipment, Adjustment, Report","Crop [ID, Name, Type, Variety, classification], Price [Code, Value, Average, Timestamp], MarketTrend [ID, Timestamp], Inventory [Quantity, Timestamp], Shipment [Crops, Quantity, Timestamp], Adjustment [Quantity, Timestamp, Reason],","Crop and Price, Crop and MarketTrend, Crop and Inventory, Crop and Shipment, Crop and Adjustment, Crop and Report"
"Organic farming has gained significant importance in recent years due to growing consumer demand for healthier and more sustainable food options. Certification bodies play a crucial role in verifying that farms adhere to organic standards. To efficiently manage the certification process, a well-structured database system is needed to handle farm certification, monitor organic practices, and maintain accurate certification records. By automating the certification and monitoring processes, the system can help reduce administrative overhead, minimize errors, and provide reliable data for auditing and compliance checks. This contributes to maintaining high standards in organic farming, benefiting both producers and consumers. Therefore, the system requirements are summarised as follows: Each certification has a unique certification number, date, description, and validity. The certification should assess farm eligibility, conduct inspections, and issue certificates. A farm is identified by a farm ID, name, address, and GPS coordinates. The Monitoring section should track farming activities, verify compliance with organic standards, and store results, which include date, description, and outcome. The record section keeps track of certification data with a unique record number, renewal date, and status. It also manages renewal processes and updates certification statuses. This system should streamline the certification process, ensure continuous compliance, and maintain accurate records for organic farming certification bodies.","Certification, Farm, Monitoring, Record","Certification [Number, Date, Description, Validity], Farm [ID, Name, Address, GPS_Coordinates], Monitoring [ID, Farms, Date, Description, Outcome], Record [Number, Date, Status]","Certification and Farm, Farm and Monitoring, Certification and Record, Record and Farm"
"Precision agriculture leverages advanced technologies, including IoT sensors, to optimize farming practices and enhance productivity. For a successful precision agriculture project, a robust database system is essential to manage data from various sources, analyse farm conditions, and implement precise crop management strategies. A well-structured database system can efficiently handle large volumes of sensor data, provide timely analysis of soil and environmental conditions, and automate crop management tasks, thereby supporting sustainable and profitable farming operations. The system requirements are detailed as follows: The Sensors should manage the collection of data from IoT devices, store the readings, and ensure data is updated. Each sensor has a unique sensor ID, reading time, and value. A condition is identified by a condition code, and also have time, description and type, which analyse the sensor data, assess soil and environmental factors, and recommend actions. The Crops component should implement the recommended actions, schedule watering, and monitor crop growth. Each crop is recorded with a crop number, variety, crop category, season, time, and growth, capturing details with fields like ID, time, and growth stage. Thus, the system should enable efficient handling of sensor data, analysis of farm conditions, and optimized crop management for precision farming.","Sensor, Condition, Crop, Action","Sensor [ID, Time, Value], Condition [Code, Time, Description, Type], Crop [Number, Variety, Category, Season, Time, Growth]","Sensor and Condition, Condition and Crop, Crop and Action"
"A financial management service for farms requires a database system to handle transactions, manage budgets, and generate reports. The system requirements are summarised as follows: Each transaction has a unique ID, date, amount, and description. So that all income and expenses and transaction are recorded. Transactions are done based on a budget. Each budget is identified by a budget number, date, allocated amount, duration, and description. Thus, the Budgets section should assist in creating and managing budgets, allocating amounts, and monitoring performance. Budgets has a report. The Reports section should generate financial summaries, provide insights, and analyse financial trends over time. Each report has a report ID, type, status, and summary. This system should support efficient tracking of farm transactions, management of budgets, and generation of financial reports.","Transaction, Budget, Report","Transaction [ID, Date, Amount, Description], Budget [Number, Date, Amount, Duration, Description], Report [ID, Date, Type, Status, Summary]","Transaction and Budget, Budget and Report, Transaction and Report"
"Managing agricultural exports efficiently is critical for companies dealing with international trade. A well-designed database system is essential for handling export orders, tracking shipments, and generating required documents. Such a system ensures that all processes are streamlined, and that information is accurate and easily accessible. The requirements for the system are outlined as follows and encompass the key functionalities and features necessary to ensure its successful implementation and operation: Each company involved in the export process is identified by a unique company ID and has name, address, contact information, certifications, and export licenses. Each company can handle multiple commodities, orders, shipments, and documents, ensuring efficient management of export operations. A commodity
to be exported is tagged with a commodity ID, name, type, description, status, quality
standards, and shelf life. The Orders section manages export requests from companies, stores order details like order ID, date, quantity, and destination, and order status. Each order is directly associated with a company and the commodities they are exporting. The Shipment tracks the status of each shipment for a company, monitors routes, and provides updates. Each shipment is linked to a specific order and commodity and includes details like shipment number, date, route, and status. This linkage ensures that the transportation of each commodity is carefully tracked and managed. The Documents section creates the necessary export paperwork for each order and shipment and stores all records. Documents are generated based on the company, order, and shipment details and are identified by a document ID, date, type, and shipment details. This ensures that all required export documentation is systematically organised and easily accessible. This system allows for the efficient management of export companies, commodities, orders, shipments, and documents, ensuring a streamlined and well-documented export process for agricultural export companies.","Company, Commodity, Order, Shipment, Document","Company [ID, Name, Address, Contact, Certifications, Licenses], Commodity [ID, Name, Type, Description, Status, Standards, ShelfLife], Order [ID, Date, Quantity, Destination, Status], Shipment [Number, Date, Route, Status], Document [ID, Date, Type, Details]","Company and Commodity, Company and Order, Order and Commodity, Order and Shipment, Shipment and Document, Company and Document"
"Consider a sample Problem Statement for an Online Stock Trading System below: A stock brokerage firm wants to provide an online stock trading service to enable its clients to make trades via the computer. With this system, a client must first be registered before he can trade online. The registration process involves the client providing his ID number, name, address and telephone number. A client may open one or more accounts for stock trading. The stock brokerage firm needs to be registered with a stock exchange before its clients can trade the stocks listed on the stock exchange. A stock brokerage firm can be registered with one or more stock exchanges. The stock brokerage firm may need to pay monthly charges for using the services provided by the stock exchange. Once registered, the client can buy and sell stocks. The client can check the current price, bid price, ask price and traded volume of a stock in real time. The stock price and traded volume information is provided by the stock exchange on which the stock is listed and traded. When a client issues a buy order for an account, the client must specify the stock code, the number of shares and the maximum price (bid price) that he is willing to pay for them. A client must have sufficient funds in his account to settle the transaction when it is completed. When a client issues a sell order, the client must specify the stock code; the number of shares and the minimum price (ask price) that he is willing to sell them. The client must have sufficient number of shares of the stock in his account before he can issue the sell order. A client can check the status of execution of his (buy or sell) orders. The client can issue a buy or sell order before the end of the trading day of the stock exchange which processed the order. All trade orders will be forwarded to the stock trading system of the stock exchange for execution. When an order is completed, the stock trading system of the stock exchange will return the transaction details of the order to the online stock trading system. The transaction details of a trade order may be a list of transactions, each transaction specifying the price and the number of shares traded. For example, the result of a buy order of 20,000 Maybank (stock code: 0005) shares at MYR 12.00 in the Bursa Saham Kuala Lumpur may be as follows: 4,000 shares at MYR 12.00; 8,000 shares at MYR 12.50; 8,000 shares at MYR 12.75. An order will be kept on the system for execution until the order is completed or the end of a trading day. There are three possible outcomes for a trade order: 1. The trade order is completed. For a buy order, the total amount for the buy order will be deducted from the client’s account and the number of shares of the stock purchased will be deposited into the account. For a sell order, the number of shares sold will be deducted from the client’s account and proceeds of the sell order will be deposited into the client’s account. 2. The trade order is partially completed. The number of shares traded (sell or buy) is less than the number of shares specified in the order. The number of shares successfully traded in the order will be used to calculate the amount of the proceeds, and the client’s account is adjusted accordingly. 3. The trade order is not executed by the end of a trading day. The order will be cancelled. A stock exchange may require that the number of shares specified in an order must be in multiples of the lot size of the stock. Each stock has its own lot size. Common lot sizes are 1, 400, 500, 1,000 and 2,000 shares. The client can deposit or withdraw cash or stock shares from his account. Upon the deposit or withdrawal of cash or stock shares, the account cash or stock balance will be updated accordingly.","Client, Account, StockExchange, Brokerage, Stock, Order, Transaction, Trade","Client [ID, Name, Address, Telephone], Account [AccountID, ClientID, Balance], StockExchange [ExchangeID, ExchangeName], Brokerage [BrokerageID, BrokerageName], Stock [Code, Name, LotSize], Order [OrderID, AccountID, StockCode, NumberOfShares, Price, Type, Status, Timestamp], Transaction [Price, NumberOfShares, Timestamp], Trade [Status, Timestamp]","Client and Account, Account and Order, Brokerage and StockExchange, Order and Stock, Order and Transaction, Order and Trade, Transaction and Stock"
"Create a domain model (using class diagram notation) based on the following description. You have been asked to build a management system for a group of archaeologists. The group is comprised of multiple teams of researchers. Each team has a letter ID (e.g., team A, team B). Each researcher belongs to one of the teams, and has an ID number, a first name, and a last name. There are two types of researchers: field and lab staff. Each field staff member has a favourite region (string). Each lab researcher supports up to 2 field researchers. Some researchers may not be supported by a lab researcher. The company also manages an inventory of equipment. Researchers of any type may check out up to 3 pieces of equipment. Each piece of equipment has a serial number and replacement cost.","Team, Researcher, FieldResearcher, LabResearcher, Equipment","Team [ID], Researcher [ID, FirstName, LastName, Type], FieldResearcher [Region], LabResearcher [Supports], Equipment [Number, Cost]","Team and Researcher, FieldResearcher and LabResearcher, Researcher and Equipment"
"Create a domain model (using class diagram notation) based on the following description. You have been contracted to build an asset-management system for a vampire-hunting company, Stake4Less. The organization consists of multiple teams of workers. Each team has a code name. Each worker belongs to one of the teams, and has an ID number, a first name, and a last name. There are two types of workers: hunters and support personnel. Hunters have a skill level. Each support person assists exactly one hunter on the team. Some hunters on the team may not be assigned a support person. The company also manages an arsenal of weapons. Workers of any type may check out up to 3 weapons from the arsenal. Each weapon has a serial number and replacement cost. There are two types of weapons in the arsenal: projectile and melee. Projectile weapons have a range and may come with an ammo pack. An ammo pack has an ammo type and includes some number of rounds. Melee weapons have a weight.","Team, Worker, Hunter, SupportPerson, Weapon, Projectile, Melee, AmmoPack","Team [Name], Worker [Number, Firstname, Lastname], Hunter [Level], SupportPerson [Assists], Weapon [Number, Cost], Projectile [Range, Pack], Melee [Weight], AmmoPack [Type, Rounds]","Team and Worker, Worker and Hunter, Worker and SupportPerson, Worker and Weapon, Weapon and Projectile, Weapon and Melee, Projectile and AmmoPack"
"Imagine that you are tasked with developing a system for a pizza shop. Given the following description, create a Domain Model (in the form of a UML class diagram). A customer places orders. A customer has a name and telephone number. There are two types of orders: pick-up and delivery. A pick-up order has a pick-up time. A delivery order has an address and deliver-by time. All orders consist of a set of items. There are two types of items: pizzas and drinks. All items have a price. A pizza has a size and a crust type. A pizza also has a number of toppings. A topping has a topping type and a price. Some pizzas are special pizzas that have a name (e.g., “Hawaiian” or “Meat Lovers”). A drink has a brand and a flavour.","Customer, Order, Pick-Up, Delivery, Item, Pizza, Drink, Topping, Special Pizza","Customer [Name, Telephone], Order [Type], Pick-Up [Time], Delivery [Address, Time], Item [Price], Pizza [Size, Type, Toppings], Drink [Brand, Flavour], Topping [Type, Price], SpecialPizza [Name]","Customer and Order, Order and Pick-Up, Order and Delivery, Order and Item, Item and Pizza, Item and Drink, Pizza and Topping, SpecialPizza and Pizza"